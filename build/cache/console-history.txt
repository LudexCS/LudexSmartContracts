await priceTable.revenueSharing(764492463, 1)
await priceTable.revenueSharing(764492463, 0)
await itemRegistry.timestampRegistered(2162799128)
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0xD9cFD4c2b149FB8cbf2682374e5AF782b9e87743")
await priceTable.getRevShare(764492463, 2162799128)
priceTable.getDeclaredShare(764492463, 2162799128)
var priceTable = await ethers.getContractAt("PriceTable", "0x2df9A2A92f36847b9b5a70e603F9C379878F5246")
yield
await priceTable.revenueSharing(764492463, 1)
await priceTable.revenueSharing(764492463, 0)
await priceTablte.revenueSharing(764492463, 0)
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0x3D74fE60C0c259ffC9cF4C855c178586A1289083")
await priceTable.getDeclaredShare(764492463, 2162799128)
await priceTable.getDeclaredShare
await priceTable.getRevShare(764492463, 2162799128)
await priceTable.getDeclaredShare(764492463, 2162799128)
priceTable.getDeclaredShare(764492463, 2162799128)
var priceTable = await ethers.getContractAt("PriceTable", "0x464420D7F97BFbEe986A7211420dB2CdF3b0F8C6")
await itemRegistry.revenueSharerOfItem(2162799128, 1)
await itemRegistry.timestampRegistered(2162799128)
await itemRegistry.timestampRegistered(764492463)
itemRegistry.timestampRegistered(764492463)
)
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0x44a72F9c6df7947C4EF01a37c65255df41Cec28C"
await priceTable.getRevShare(764492463, 2162799128)
await priceTable.revenueSharing(764492463, 1)
await priceTable.revenueSharing(764492463, 0)
await priceTable.getPriceUsd(2162799128)
)
var priceTable = await ethers.getContractAt("PriceTable", "0xf27b1Ec602fe063125d4A4042Cf7442C89c559c1"
await priceTable.revenueSharing(2644850097, 0)
await priceTable.revenueSharing(2644850097, 1)
await priceTable.getPriceUsd(424062523)
await priceTable.revenueSharing(2644850097, 1)
await priceTable.revenueSharing(2644850097, 0)
await priceTable.revenueSharing(3021322027, 1)
await priceTable.revenueSharing(3021322027, 0)
await itemRegistry.timestampRegistered(2162799128)
await itemRegistry.timestampRegistered(764492463)
await priceTable.revenueSharing(764492463, 2)
await priceTable.revenueSharing(764492463, 1)
await priceTable.revenueSharing(764492463, 0)
await itemRegistry.timestampRegistered(2162799128)
await priceTable.revenueSharing(764492463, 0)
11990000000000000000n * 1000n / 10000n
await priceTable.getPriceUsd(2162799128)
await priceTable.discountEndTime(2162799128)
await itemRegistry.numberOfSharers(2162799128)
await priceTable.getPriceUsd(2162799128)
await priceTable.getRevShare(764492463, 2162799128)
await itemRegistry.revenueSharerOfItem(2162799128, 1)
await itemRegistry.revenueSharerOfItem(2162799128, 0)
itemRegistry.revenueSharerOfItem(2162799128, 0)
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0xd30170762F247e825e5B8301C59D586A76845370")
await priceTable.usdPrice(2162799128)
await priceTable.revenueSharing(764492463, 0)
await priceTable.getRevShare(764492463, 2162799128)
await priceTable.getPriceUsd(2162799128)
priceTable.getPriceUsd(2162799128)
await priceTable.getPriceUsd(2162799128)
priceTable.getPriceUsd(2162799128)
var priceTable = await ethers.getContractAt("PriceTable", "0xCfF42e8b993A873D52E430a8e8e94B674D79BA28")
yield
await priceTable.getPriceUsd.staticCall(678565060)
await priceTable.getUsdTakings(678565060)
await priceTable.getPriceUsd(678565060)
await priceTable.getUsdPrice(678565060)
await priceTable.getUsdTakings(678565060)
await itemRegistry.numberOfSharers(2162799128)
itemRegistry.numberOfSharers(2162799128)
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0xd30170762F247e825e5B8301C59D586A76845370")
await priceTable.getUsdTakings(2162799128)
await priceTable.getPriceInfoList(2162799128)
await priceTable.getPriceUsd(2162799128)
await priceTable.getPriceInfoList(2162799128)
await priceTable.getUsdTakings(2162799128)
await priceTable.getUsdTakings
await priceTable.usdPrice(2162799128)
await priceTable.getUsdTakings(2162799128)
await priceTable.getUsdTakings
await priceTable.getUsdTakings(2162799128n);
var priceTable = await ethers.getContractAt("PriceTable", "0xCfF42e8b993A873D52E430a8e8e94B674D79BA28");
signers = await signers
var signers = ethers.getSigners()
await usdc.allowance(ownerAddress, "0x17fC9045f4A6aD2C3A6615062370D09FE495e142")
usdc.connect(owner).approve("0x17fC9045f4A6aD2C3A6615062370D09FE495e142", ethers.MaxUint256)
usdc.connect(owner).approve
usdc.approve
await usdc.allowance(ownerAddress, "0x17fC9045f4A6aD2C3A6615062370D09FE495e142")
await usdc.allowance(ownerAddress, "0x3aFC117E852e97A41143B06782627F113929FF30")
usdc.allowance(ownerAddress, "0x3aFC117E852e97A41143B06782627F113929FF30")
var ownerAddress = await owner.getAddress();
var usdc = await ethers.getContractAt("MockUSDC", "0x30Db32C834bBada42AF142F183C89F68621b8742")
var profitEscrow = await ethers.getContractAt("ProfitEscrow", "0x3aFC117E852e97A41143B06782627F113929FF30")
var owner = signers[0]
var signers = singers
signers
var owner = signers[0]
var singers = await ethers.getSigners()
await mockUSDC.balanceOf("0x3aFC117E852e97A41143B06782627F113929FF30")
await mockUSDC.balanceOf(ownerAddress)
await mockUSDC.connect(owner).allowance(ownerAddress, "0x3aFC117E852e97A41143B06782627F113929FF30")
await mockUSDC.connect(owner).approve("0x3aFC117E852e97A41143B06782627F113929FF30", max);
var max = ethers.MaxUint256;
await mockUSDC.connect(owner).allowance(ownerAddress, "0x3aFC117E852e97A41143B06782627F113929FF30")
mockUSDC.connect(owner).allowance(ownerAddress, "0x3aFC117E852e97A41143B06782627F113929FF30")
var ownerAddress = await owner.getAddress();
await owner.getAddress()
awaitowner.getAddress()
mockUSDC = await mockUSDC;
var mockUSDC = ethers.getContractAt("MockUSDC", "0x30Db32C834bBada42AF142F183C89F68621b8742")
var owner = signers[0]
signers = await signers
var signers = ethers.getSigners()
await itemRegistry.seller(2524044708)
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0xF6104BEc7Ef58C02A31e23570710b58eC9b4806A")
await priceTable.discountUsdPrice(1030516071)
var priceInfoList = await priceTable.getPriceInfoList(1030516071)
new Date(endtime * 1000)
endtime = Number(endtime)
new Date(endtime * 1000n)
new Date(endtime * 1000)
var endtime = await priceTable.revShareReductionEndTime(1855031587)
await priceTable.revShareReductionEndTime(1855031587)
console.log(d(1, 20))
await priceTable.getRevShare(1855031587, 0)
await priceTable.getRevShare(1748049120, 0)
new Date(1748049120 * 1000)
await priceTable.revShareReductionEndTime(1855031587)
await priceTable.connect(seller2).startRevShareReductionEvent(1855031587, 1000, (d(1, 12).getTime() / 1000))
var seller2 = signers[2]
var d = (h, m) => new Date((new Date(Date.UTC(2025, 4, 24, h, m, 0)).getTime() /1000) * 1000)
new Date((new Date(Date.UTC(2025, 4, 24, 0, 50, 0)).getTime() /1000) * 1000)
new Date((new Date(Date.UTC(2025, 5, 24, 0, 50, 0)).getTime() /1000) * 1000)
new Date((new Date(2025, 5, 24, 0, 50, 0).getTime() /1000) * 1000)
(new Date(2025, 5, 24, 0, 50, 0).getTime() /1000)
date
new Date(1750693800 * 1000)
new Date(1750693800)
await priceTable.revShareReductionEndTime(3386994627)
await priceTable.getRevShare(3386994627, 1030516071)
priceTable.getRevShare(3386994627, 1030516071)
await priceTable.getRevShare(3386994627, 1030516071)
priceTable.getRevShare(3386994627, 1030516071)
priceTable.getRevShare(3386994627, 1030516071_
await priceTable.connect(seller1).startRevShareReductionEvent(3386994627, 1200, (new Date(2025, 5, 24, 0, 50, 0).getTime() /1000))
await priceTable.connect.startRevShareReductionEvent(3386994627, 1200, (new Date(2025, 5, 24, 0, 50, 0).getTime() /1000))
await priceTable.connect.startRevShareReductionEvent(3386994627, 1200, (new Date(2025, 5, 24, 0, 50, 0).getTime() /1000);
priceTable.connect.startRevShareReductionEvent(3386994627, 1200, date.getTime() / 1000)
date.getTime()
date
var date = new Date(2025, 5, 24, 0, 46, 0)
var priceTable = await ethers.getContractAt("PriceTable", "0xb7F4a1181a040Ee4c80cab9DF52eD0380e3149C2")
var seller1 = signers[1]
var owner = signers[0]
var signers = await ethers.getSigners()
await priceTable.revShareReductionEndTime(3590375653)
await priceTable.revenueSharing(3590375653, 1)
await priceTable.connect(seller1).changeRevShare(3590375653, 1500)
var seller1 = signer[1]
signer[1]
var signer = await ethers.getSigners();
await priceTable.revenueSharing(3590375653, 0)
priceTable.revenueSharing(3590375653, 0)
await priceTable.changeRevShare(3590375653, 1500)
await itemRegistry.seller(3590375653)
await itemRegistry.seller(2361474204)
itemRegistry.seller(2361474204);
var itemRegistry = await ethers.getContractAt("ItemRegistry", "0x900603abC02687fEcF6B9741899AC4c95fD0D0eE")
var priceTable = await ethers.getContractAt("PriceTable", "0x33915088f9746ECa549E28fc4A544bA38065b595")
var revShare = priceTable.revenueSharing(3501190002)
result
var result = await priceTable.callStatic.revenueSharing(3425990434n, 0)
var [share, timestamp] = await priceTable.revenueSharing(3425990434n, 0)
await itemRegistry.revenueSharingItems(3501190002n, 0)
itemRegistry.revenueSharingItems(3501190002n, 0)
await itemRegistry.seller(3501190002)
itemRegistry.seller(3501190002)
await priceTable.revShareReductionEndTime(3425990434)
await priceTable.revShareReductionEndTime(3425990434n)
var share = await priceTable.revenueSharing(3425990434n)
var share = await priceTable.revenueSharing(3425990434n, 0)
var share = await priceTable.revenueSharing(3501190002n, 0)
await priceTable.getRevShare(3501190002n, 1639842554n);
await itemRegistry.timestampRegistered(1639842554n)
itemRegistry.timestampRegistered(1639842554n)
await itemRegistry.owner()
itemRegistry.owner()
provider
var provider = new ethers.JsonRpcProvider("https://opt-sepolia.g.alchemy.com/v2/04Cl2AZOm2T34vfclslpWuQBttwTnb--")
await itemRegistry.seller(3501190002n)
itemRegistry.seller(3501190002n)
var itemRegistry = await itemRegistry;
var itemRegistry = ethers.getContractAt("ItemRegistry", "0x17bcCa450358c5d4C9d00fE5a17A1a385Df69D98")
await priceTable.getRevShare(3501190002n, 1639842554n);
await priceTable.getRevShare(3501190002, 1639842554);
priceTable.getRevShare(3501190002, 1639842554);
var priceTable = await priceTable;
var priceTable = ethers.getContractAt("PriceTable", "0xC6ab2B75870B09d30F7F77EDEb2AcB79d12815dD")
var owner = signers[0];
var signers = await ethers.getSigners();
var owner = ethers.getSigner(0)
owner.address
await itemRegistry.connect(owner).setSellerProxy("0xfAB3e996c07989bEE94c0Cf77D367578Ae0147Ff")
itemRegistry.connect(owner).setSellerProxy("0xfAB3e996c07989bEE94c0Cf77D367578Ae0147Ff")
itemRegistry = await itemRegistry
var itemRegistry = ethers.getContractAt("ItemRegistry", "0x7a85a5e7A18EC387f719359d9A002E36DE52C23A")
ethers.getContractAt.toString()
Object.keys(ethers.getContractAt)
Object.Keys(ethers.getContractAt)
ItemRegistry = await ItemRegistry
var ItemRegistry = ethers.getContractFactory("ItemRegistry");
ethers.getContractFactory
var owner = accounts[0];
accounts = await accounts;
var accounts = ethers.getSigners()
await mockUSDC.connect(owner).balanceOf("0x4D2CBE6E0Bdd948c487776d0883C23F3303D9C16")
await mockUSDC.connect(owner).giveaway("0x4D2CBE6E0Bdd948c487776d0883C23F3303D9C16")
mockUSDC.connect(owner).giveaway("0x4D2CBE6E0Bdd948c487776d0883C23F3303D9C16")
mockUSDC
var mockUSDC = await ethers.getContractAt("MockUSDC", "0xa513ABFdD3366E7cDf0cC50a2bebCD893CdA9729")
var mockUSDC = ethers.getContractAt("0xa513ABFdD3366E7cDf0cC50a2bebCD893CdA9729", "MockUSDC", owner)
var MockUSDC = await mockUSDC
var mockUSDC = ethers.getContractFactory("MockUSDC")
var owner = accounts[0]
accounts = await accounts
var accounts = ethers.getSigners()
yield
accounts
accounts = await ethers.getSigners()
accounts = ethers.getSigners()
let accounts = ethers.getSigners()
let accounts = ethers.getAccounts()
yield
signerOwner
await token.balanceOf(buyer);
token.balanceOf(buyer);
await token.connect(signerOwner).giveaway(buyer);
await token.balanceOf(buyer);
token.balanceOf
let buyer = signers[4];
signers
let token = Token.attach("0x225f3f481F7647B64219C6E4E1226dFEc60c7241");
Token = await Token;
let Token = ethers.getContractFactory("MockUSDC");
await ledger.owner();
await ledger.isTrustedForwarder("0xb9bf741D2F7b56B9e854344Fd2c5eCE1a8731C4a");
let ledger = Ledger.attach("0x6EA8fc1c828FAc37e905D307302FC9e893178ad4");
Ledger = await Ledger;
let Ledger = ethers.getContractFactory("Ledger");
await store.isTrustedForwarder("0xb9bf741D2F7b56B9e854344Fd2c5eCE1a8731C4a");
store.isTrustedForwarder
let store = Store.attach("0xAdD7B73d47Fc342be20058329acF01c833F3bCD1");
let Store = await ethers.getContractFactory("Store");
let signe