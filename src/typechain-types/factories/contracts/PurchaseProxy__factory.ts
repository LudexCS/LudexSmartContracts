/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PurchaseProxy,
  PurchaseProxyInterface,
} from "../../contracts/PurchaseProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "storeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "purchases",
        type: "uint256[]",
      },
    ],
    name: "PurchaseIDsClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "ownerID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "purchaseIDs",
        type: "uint256[]",
      },
    ],
    name: "claimPurchaseIDs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "purchaseID",
        type: "uint256",
      },
    ],
    name: "getPurchaseInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "itemID",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyer",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PurchaseProxy.PurchaseInfo",
        name: "purchase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "ownerID",
        type: "uint32",
      },
    ],
    name: "purchaseItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000037576200001e6200001862000116565b620002e9565b620000286200003d565b6110616200054c823961106190f35b62000043565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90620000749062000048565b810190811060018060401b038211176200008d57604052565b62000052565b90620000aa620000a26200003d565b928362000068565b565b600080fd5b60018060a01b031690565b620000c790620000b1565b90565b620000d581620000bc565b03620000dd57565b600080fd5b90505190620000f182620000ca565b565b9060208282031262000110576200010d91600001620000e2565b90565b620000ac565b62000139620015ad803803806200012d8162000093565b928339810190620000f3565b90565b90565b62000158620001526200015e92620000b1565b6200013c565b620000b1565b90565b6200016c906200013f565b90565b6200017a9062000161565b90565b60001b90565b906200019660018060a01b03916200017d565b9181191691161790565b620001ab9062000161565b90565b90565b90620001cb620001c5620001d392620001a0565b620001ae565b825462000183565b9055565b60001c90565b60018060a01b031690565b620001f7620001fd91620001d7565b620001dd565b90565b6200020c9054620001e8565b90565b6200021a906200013f565b90565b62000228906200020f565b90565b60e01b90565b6200023c90620000bc565b90565b6200024a8162000231565b036200025257565b600080fd5b9050519062000266826200023f565b565b906020828203126200028557620002829160000162000257565b90565b620000ac565b60000190565b6200029b6200003d565b3d6000823e3d90fd5b620002af906200013f565b90565b620002bd90620002a4565b90565b90565b90620002dd620002d7620002e592620002b2565b620002c0565b825462000183565b9055565b620003036200030b91620002fd336200040b565b6200016f565b6002620001b1565b6200034060206200032762000321600262000200565b6200021d565b6356397c3590620003376200003d565b9384926200022b565b8252818062000352600482016200028b565b03915afa8015620003ab57620003749160009162000376575b506003620002c3565b565b6200039c915060203d8111620003a3575b62000393818362000068565b81019062000268565b386200036b565b503d62000387565b62000291565b90565b620003cd620003c7620003d392620003b1565b6200013c565b620000b1565b90565b620003e190620003b4565b90565b620003ef90620000bc565b9052565b91906200040990600060208501940190620003e4565b565b806200042d62000426620004206000620003d6565b620000bc565b91620000bc565b1462000440576200043e90620004de565b565b62000471620004506000620003d6565b6200045a6200003d565b918291631e4fbdf760e01b835260048301620003f3565b0390fd5b60018060a01b031690565b6200048f6200049591620001d7565b62000475565b90565b620004a4905462000480565b90565b620004b2906200020f565b90565b90565b90620004d2620004cc620004da92620004a7565b620004b5565b825462000183565b9055565b620004ea600062000498565b620004f7826000620004b8565b906200052f620005287f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093620004a7565b91620004a7565b916200053a6200003d565b8062000546816200028b565b0390a356fe60806040526004361015610013575b61051b565b61001e60003561008d565b80635887504914610088578063715018a6146100835780638da5cb5b1461007e57806393bb043414610079578063a123c33e14610074578063a7e500141461006f5763f2fde38b0361000e576104e8565b610495565b610425565b610347565b610229565b6101bc565b610171565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6100b4816100a8565b036100bb57565b600080fd5b905035906100cd826100ab565b565b906020828203126100e9576100e6916000016100c0565b90565b61009e565b6100f7906100a8565b9052565b63ffffffff1690565b61010d906100fb565b9052565b906060806101599361012b600082015160008601906100ee565b61013d60208201516020860190610104565b61014f60408201516040860190610104565b01519101906100ee565b565b919061016f90600060808501940190610111565b565b346101a15761019d61018c6101873660046100cf565b610f32565b610194610093565b9182918261015b565b0390f35b610099565b60009103126101b157565b61009e565b60000190565b346101ea576101cc3660046101a6565b6101d46105be565b6101dc610093565b806101e6816101b6565b0390f35b610099565b60018060a01b031690565b610203906101ef565b90565b61020f906101fa565b9052565b919061022790600060208501940190610206565b565b34610259576102393660046101a6565b610255610244610557565b61024c610093565b91829182610213565b0390f35b610099565b610267816100fb565b0361026e57565b600080fd5b905035906102808261025e565b565b61028b816101fa565b0361029257565b600080fd5b905035906102a482610282565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102ef5781359167ffffffffffffffff83116102ea5760200192602083028401116102e557565b6102b0565b6102ab565b6102a6565b916060838303126103425761030c8260008501610273565b9261031a8360208301610297565b92604082013567ffffffffffffffff811161033d5761033992016102b5565b9091565b6100a3565b61009e565b346103795761036361035a3660046102f4565b92919091610e0b565b61036b610093565b80610375816101b6565b0390f35b610099565b90565b61039561039061039a926100a8565b61037e565b6100a8565b90565b906103a790610381565b600052602052604060002090565b1c90565b63ffffffff1690565b6103d29060086103d793026103b5565b6103b9565b90565b906103e591546103c2565b90565b6103ff906103fa60019160009261039d565b6103da565b90565b61040b906100fb565b9052565b919061042390600060208501940190610402565b565b346104555761045161044061043b3660046100cf565b6103e8565b610448610093565b9182918261040f565b0390f35b610099565b90916060828403126104905761048d6104768460008501610297565b936104848160208601610273565b93604001610273565b90565b61009e565b346104c4576104ae6104a836600461045a565b9161097c565b6104b6610093565b806104c0816101b6565b0390f35b610099565b906020828203126104e3576104e091600001610297565b90565b61009e565b34610516576105006104fb3660046104c9565b61068b565b610508610093565b80610512816101b6565b0390f35b610099565b600080fd5b600090565b60001c90565b60018060a01b031690565b61054261054791610525565b61052b565b90565b6105549054610536565b90565b61055f610520565b5061056a600061054a565b90565b6105756105c8565b61057d6105aa565b565b90565b61059661059161059b9261057f565b61037e565b6101ef565b90565b6105a790610582565b90565b6105bc6105b7600061059e565b61070e565b565b6105c661056d565b565b6105d0610557565b6105e96105e36105de61076f565b6101fa565b916101fa565b036105f057565b6106196105fb61076f565b610603610093565b91829163118cdaa760e01b835260048301610213565b0390fd5b61062e906106296105c8565b610630565b565b8061064c610646610641600061059e565b6101fa565b916101fa565b1461065c5761065a9061070e565b565b610687610669600061059e565b610671610093565b918291631e4fbdf760e01b835260048301610213565b0390fd5b6106949061061d565b565b60001b90565b906106ad60018060a01b0391610696565b9181191691161790565b6106cb6106c66106d0926101ef565b61037e565b6101ef565b90565b6106dc906106b7565b90565b6106e8906106d3565b90565b90565b906107036106fe61070a926106df565b6106eb565b825461069c565b9055565b610718600061054a565b6107238260006106ee565b906107576107517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936106df565b916106df565b91610760610093565b8061076a816101b6565b0390a3565b610777610520565b503390565b9061078f929161078a6105c8565b6108d8565b565b60018060a01b031690565b6107a86107ad91610525565b610791565b90565b6107ba905461079c565b90565b6107c6906106d3565b90565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906107f8906107ce565b810190811067ffffffffffffffff82111761081257604052565b6107d8565b60e01b90565b9050519061082a826100ab565b565b90602082820312610846576108439160000161081d565b90565b61009e565b91602061086d92949361086660408201966000830190610402565b0190610206565b565b610877610093565b3d6000823e3d90fd5b9061088f63ffffffff91610696565b9181191691161790565b6108ad6108a86108b2926100fb565b61037e565b6100fb565b90565b90565b906108cd6108c86108d492610899565b6108b5565b8254610880565b9055565b6020909291926108f06108eb60026107b0565b6107bd565b610914600063a19363ac96939661091f610908610093565b98899687958694610817565b84526004840161084b565b03925af1918215610977576109479261094291600091610949575b50600161039d565b6108b8565b565b61096a915060203d8111610970575b61096281836107ee565b81019061082c565b3861093a565b503d610958565b61086f565b90610987929161077c565b565b9061099d9392916109986105c8565b610c6f565b565b60209181520190565b60007f4e6f7420612076616c696420636c61696d657220616464726573730000000000910152565b6109dd601b60209261099f565b6109e6816109a8565b0190565b610a0090602081019060008183039101526109d0565b90565b15610a0a57565b610a12610093565b62461bcd60e51b815280610a28600482016109ea565b0390fd5b610a40610a3b610a459261057f565b61037e565b6100fb565b90565b634e487b7160e01b600052601160045260246000fd5b610a67906100fb565b63ffffffff8114610a785760010190565b610a48565b5090565b610a95610a90610a9a926100fb565b61037e565b6100a8565b90565b634e487b7160e01b600052603260045260246000fd5b9190811015610ac3576020020190565b610a9d565b35610ad2816100ab565b90565b610ae1610ae691610525565b6103b9565b90565b610af39054610ad5565b90565b60007f4e6f74206974656d206f776e6572000000000000000000000000000000000000910152565b610b2b600e60209261099f565b610b3481610af6565b0190565b610b4e9060208101906000818303910152610b1e565b90565b15610b5857565b610b60610093565b62461bcd60e51b815280610b7660048201610b38565b0390fd5b60018060a01b031690565b610b91610b9691610525565b610b7a565b90565b610ba39054610b85565b90565b610baf906106d3565b90565b610bbb906106d3565b90565b6000910312610bc957565b61009e565b610bd7906100a8565b9052565b604090610c05610c0c9496959396610bfb60608401986000850190610206565b6020830190610206565b0190610bce565b565b60209181520190565b600080fd5b9037565b909182610c2c91610c0e565b9160018060fb1b038111610c4f5782916020610c4b9202938491610c1c565b0190565b610c17565b9091610c6c9260208301926000818503910152610c20565b90565b93929091610c9983610c92610c8c610c87600061059e565b6101fa565b916101fa565b1415610a03565b610ca36000610a2c565b5b80610cc1610cbb610cb6858790610a7d565b6100a8565b91610a81565b1015610dbf57610ce3610cde8385610cd885610a81565b91610ab3565b610ac8565b90610d13610cfb610cf66001859061039d565b610ae9565b610d0d610d078a6100fb565b916100fb565b14610b51565b610d25610d206003610b99565b610ba6565b6323b872dd90610d3430610bb2565b90879492813b15610dba576000610d5e91610d698296610d52610093565b998a9788968795610817565b855260048501610bdb565b03925af1918215610db557610d8392610d88575b50610a5e565b610ca4565b610da89060003d8111610dae575b610da081836107ee565b810190610bbe565b38610d7d565b503d610d96565b61086f565b6107c9565b5091909293509091610df17fef15881179840a70ad945bad81e677cc59e030cb404f81a92bc3ac6fd4f4a575926106df565b92610e06610dfd610093565b92839283610c54565b0390a2565b90610e17939291610989565b565b90610e2c610e25610093565b92836107ee565b565b610e386080610e19565b90565b600090565b600090565b610e4d610e2e565b90602080808085610e5c610e3b565b815201610e67610e40565b815201610e72610e40565b815201610e7d610e3b565b81525050565b610e8b610e45565b90565b90505190610e9b8261025e565b565b90505190610eaa82610282565b565b608081830312610eee57610ec3826000830161081d565b92610eeb610ed48460208501610e8e565b93610ee28160408601610e9d565b9360600161081d565b90565b61009e565b9190610f0790600060208501940190610bce565b565b610f136080610e19565b90565b90610f20906100a8565b9052565b90610f2e906100fb565b9052565b610f3a610e83565b50610f7c6080610f52610f4d6003610b99565b610ba6565b638392fe3190610f718592610f65610093565b95869485938493610817565b835260048301610ef3565b03915afa9182156110265760008080809492505093610feb575b50610fdf610fe892610fd6610fb6610fb1859795600161039d565b610ae9565b9193610fcd610fc3610f09565b9760008901610f16565b60208701610f24565b60408501610f24565b60608301610f16565b90565b610fdf9350610fe892506110159060803d811161101f575b61100d81836107ee565b810190610eac565b9450509350610f96565b503d611003565b61086f56fea26469706673582212200d22fded2baaebb7e13d2faa957b5924947ee8c3f975a4f7d3c7b63bfc2a761064736f6c63430008150033";

type PurchaseProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PurchaseProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PurchaseProxy__factory extends ContractFactory {
  constructor(...args: PurchaseProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    storeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(storeAddress, overrides || {});
  }
  override deploy(
    storeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(storeAddress, overrides || {}) as Promise<
      PurchaseProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PurchaseProxy__factory {
    return super.connect(runner) as PurchaseProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PurchaseProxyInterface {
    return new Interface(_abi) as PurchaseProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PurchaseProxy {
    return new Contract(address, _abi, runner) as unknown as PurchaseProxy;
  }
}
