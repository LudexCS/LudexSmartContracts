/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PaymentProcessor,
  PaymentProcessorInterface,
} from "../../contracts/PaymentProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarderAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "initialFeeRate",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "priceTableAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "profitEscrowAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDeadline",
        type: "uint256",
      },
    ],
    name: "changePermissionDeadline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeRateLog",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "feeRate",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isAllowedToPurchase",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemRegistry",
    outputs: [
      {
        internalType: "contract ItemRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceTable",
    outputs: [
      {
        internalType: "contract PriceTable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "process",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "profitEscrow",
    outputs: [
      {
        internalType: "contract ProfitEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerRegistry",
    outputs: [
      {
        internalType: "contract SellerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052610e106006553480156200001757600080fd5b50604051620023283803806200232883398181016040528101906200003d919062000513565b33848082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b65760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ad919062000596565b60405180910390fd5b620000c781620003a660201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505050600160405180604001604052804281526020018561ffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548161ffff021916908361ffff160217905550505081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663957047f66040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000221573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002479190620005f8565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370c69b096040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031b91906200066f565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620006a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200049c826200046f565b9050919050565b620004ae816200048f565b8114620004ba57600080fd5b50565b600081519050620004ce81620004a3565b92915050565b600061ffff82169050919050565b620004ed81620004d4565b8114620004f957600080fd5b50565b6000815190506200050d81620004e2565b92915050565b6000806000806080858703121562000530576200052f6200046a565b5b60006200054087828801620004bd565b94505060206200055387828801620004fc565b93505060406200056687828801620004bd565b92505060606200057987828801620004bd565b91505092959194509250565b62000590816200048f565b82525050565b6000602082019050620005ad600083018462000585565b92915050565b6000620005c0826200048f565b9050919050565b620005d281620005b3565b8114620005de57600080fd5b50565b600081519050620005f281620005c7565b92915050565b6000602082840312156200061157620006106200046a565b5b60006200062184828501620005e1565b91505092915050565b600062000637826200048f565b9050919050565b62000649816200062a565b81146200065557600080fd5b50565b60008151905062000669816200063e565b92915050565b6000602082840312156200068857620006876200046a565b5b6000620006988482850162000658565b91505092915050565b608051611c6b620006bd60003960006103fa0152611c6b6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063733d224f1161009757806395e520c91161006657806395e520c9146102535780639d367cd11461026f578063b36fb6851461028b578063f2fde38b146102bb576100f5565b8063733d224f146101dd5780637da0a877146101f95780638da5cb5b14610217578063957047f614610235576100f5565b80635ada0c29116100d35780635ada0c2914610179578063606d98431461019757806370c69b09146101b5578063715018a6146101d3576100f5565b8063100f9bf8146100fa57806351b4498914610118578063572b6c0514610149575b600080fd5b6101026102d7565b60405161010f91906110fe565b60405180910390f35b610132600480360381019061012d9190611154565b6102fd565b6040516101409291906111ad565b60405180910390f35b610163600480360381019061015e9190611214565b61033f565b604051610170919061125c565b60405180910390f35b61018161037e565b60405161018e9190611298565b60405180910390f35b61019f6103a4565b6040516101ac91906112b3565b60405180910390f35b6101bd6103aa565b6040516101ca91906112ef565b60405180910390f35b6101db6103d0565b005b6101f760048036038101906101f29190611154565b6103e4565b005b6102016103f6565b60405161020e9190611319565b60405180910390f35b61021f61041e565b60405161022c9190611319565b60405180910390f35b61023d610447565b60405161024a9190611355565b60405180910390f35b61026d600480360381019061026891906113df565b61046d565b005b61028960048036038101906102849190611496565b610512565b005b6102a560048036038101906102a09190611496565b610789565b6040516102b2919061125c565b60405180910390f35b6102d560048036038101906102d09190611214565b6108bb565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061030d57600080fd5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900461ffff16905082565b60006103496103f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103d8610941565b6103e260006109c8565b565b6103ec610941565b8060068190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8473ffffffffffffffffffffffffffffffffffffffff1663d505accf610491610a8c565b307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff888888886040518863ffffffff1660e01b81526004016104d99796959493929190611507565b600060405180830381600087803b1580156104f357600080fd5b505af1158015610507573d6000803e3d6000fd5b505050505050505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323cd9f0184846040518363ffffffff1660e01b8152600401610571929190611585565b602060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b291906115c3565b90508173ffffffffffffffffffffffffffffffffffffffff166323b872dd8530846040518463ffffffff1660e01b81526004016105f1939291906115f0565b6020604051808303816000875af1158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190611653565b610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a906116dd565b60405180910390fd5b600061067e84610a9b565b905060006127108261ffff1684610695919061172c565b61069f919061179d565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6106c561041e565b836040518363ffffffff1660e01b81526004016106e39291906117ce565b6020604051808303816000875af1158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190611653565b610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90611843565b60405180910390fd5b600081846107739190611863565b9050610780868683610c2a565b50505050505050565b6000808290506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323cd9f0186866040518363ffffffff1660e01b81526004016107ee929190611585565b602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f91906115c3565b9050808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e88306040518363ffffffff1660e01b815260040161086d929190611897565b602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae91906115c3565b1015925050509392505050565b6108c3610941565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109355760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161092c9190611319565b60405180910390fd5b61093e816109c8565b50565b610949610a8c565b73ffffffffffffffffffffffffffffffffffffffff1661096761041e565b73ffffffffffffffffffffffffffffffffffffffff16146109c65761098a610a8c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109bd9190611319565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610a96610fea565b905090565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639884c1c8846040518263ffffffff1660e01b8152600401610af991906118c0565b602060405180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a91906115c3565b90506001808080549050610b4e9190611863565b81548110610b5f57610b5e6118db565b5b906000526020600020906002020160010160009054906101000a900461ffff16915060005b600180549050811015610c23578160018281548110610ba657610ba56118db565b5b90600052602060002090600202016000015410610c10576000811115610bd5578080610bd19061190a565b9150505b60018181548110610be957610be86118db565b5b906000526020600020906002020160010160009054906101000a900461ffff169250610c23565b8080610c1b90611933565b915050610b84565b5050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368797c4c856040518263ffffffff1660e01b8152600401610c8791906118c0565b602060405180830381865afa158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc89190611990565b9050600082905060005b8260ff168160ff161015610e72576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0a68a0488846040518363ffffffff1660e01b8152600401610d3f9291906119bd565b602060405180830381865afa158015610d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8091906119fb565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636612af20836040518263ffffffff1660e01b8152600401610ddf91906118c0565b602060405180830381865afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e209190611a54565b905060006127108261ffff1688610e37919061172c565b610e41919061179d565b90508085610e4f9190611863565b9450610e5c838983610c2a565b5050508080610e6a90611a81565b915050610cd2565b508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610ed09291906117ce565b6020604051808303816000875af1158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f139190611653565b610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4990611af6565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320bc0c8f8686846040518463ffffffff1660e01b8152600401610fb193929190611b16565b600060405180830381600087803b158015610fcb57600080fd5b505af1158015610fdf573d6000803e3d6000fd5b505050505050505050565b600080600036905090506000610ffe61105f565b90506110093361033f565b80156110155750808210155b1561104f5760003682846110299190611863565b90809261103893929190611b57565b906110439190611bd6565b60601c9250505061105c565b61105761106e565b925050505b90565b6000611069611076565b905090565b600033905090565b60006014905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110c46110bf6110ba8461107f565b61109f565b61107f565b9050919050565b60006110d6826110a9565b9050919050565b60006110e8826110cb565b9050919050565b6110f8816110dd565b82525050565b600060208201905061111360008301846110ef565b92915050565b600080fd5b6000819050919050565b6111318161111e565b811461113c57600080fd5b50565b60008135905061114e81611128565b92915050565b60006020828403121561116a57611169611119565b5b60006111788482850161113f565b91505092915050565b61118a8161111e565b82525050565b600061ffff82169050919050565b6111a781611190565b82525050565b60006040820190506111c26000830185611181565b6111cf602083018461119e565b9392505050565b60006111e18261107f565b9050919050565b6111f1816111d6565b81146111fc57600080fd5b50565b60008135905061120e816111e8565b92915050565b60006020828403121561122a57611229611119565b5b6000611238848285016111ff565b91505092915050565b60008115159050919050565b61125681611241565b82525050565b6000602082019050611271600083018461124d565b92915050565b6000611282826110cb565b9050919050565b61129281611277565b82525050565b60006020820190506112ad6000830184611289565b92915050565b60006020820190506112c86000830184611181565b92915050565b60006112d9826110cb565b9050919050565b6112e9816112ce565b82525050565b600060208201905061130460008301846112e0565b92915050565b611313816111d6565b82525050565b600060208201905061132e600083018461130a565b92915050565b600061133f826110cb565b9050919050565b61134f81611334565b82525050565b600060208201905061136a6000830184611346565b92915050565b600060ff82169050919050565b61138681611370565b811461139157600080fd5b50565b6000813590506113a38161137d565b92915050565b6000819050919050565b6113bc816113a9565b81146113c757600080fd5b50565b6000813590506113d9816113b3565b92915050565b600080600080600060a086880312156113fb576113fa611119565b5b6000611409888289016111ff565b955050602061141a8882890161113f565b945050604061142b88828901611394565b935050606061143c888289016113ca565b925050608061144d888289016113ca565b9150509295509295909350565b600063ffffffff82169050919050565b6114738161145a565b811461147e57600080fd5b50565b6000813590506114908161146a565b92915050565b6000806000606084860312156114af576114ae611119565b5b60006114bd868287016111ff565b93505060206114ce86828701611481565b92505060406114df868287016111ff565b9150509250925092565b6114f281611370565b82525050565b611501816113a9565b82525050565b600060e08201905061151c600083018a61130a565b611529602083018961130a565b6115366040830188611181565b6115436060830187611181565b61155060808301866114e9565b61155d60a08301856114f8565b61156a60c08301846114f8565b98975050505050505050565b61157f8161145a565b82525050565b600060408201905061159a6000830185611576565b6115a7602083018461130a565b9392505050565b6000815190506115bd81611128565b92915050565b6000602082840312156115d9576115d8611119565b5b60006115e7848285016115ae565b91505092915050565b6000606082019050611605600083018661130a565b611612602083018561130a565b61161f6040830184611181565b949350505050565b61163081611241565b811461163b57600080fd5b50565b60008151905061164d81611627565b92915050565b60006020828403121561166957611668611119565b5b60006116778482850161163e565b91505092915050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006116c7600f83611680565b91506116d282611691565b602082019050919050565b600060208201905081810360008301526116f6816116ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117378261111e565b91506117428361111e565b92508282026117508161111e565b91508282048414831517611767576117666116fd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117a88261111e565b91506117b38361111e565b9250826117c3576117c261176e565b5b828204905092915050565b60006040820190506117e3600083018561130a565b6117f06020830184611181565b9392505050565b7f466565207472616e73666572206661696c656400000000000000000000000000600082015250565b600061182d601383611680565b9150611838826117f7565b602082019050919050565b6000602082019050818103600083015261185c81611820565b9050919050565b600061186e8261111e565b91506118798361111e565b9250828203905081811115611891576118906116fd565b5b92915050565b60006040820190506118ac600083018561130a565b6118b9602083018461130a565b9392505050565b60006020820190506118d56000830184611576565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006119158261111e565b915060008203611928576119276116fd565b5b600182039050919050565b600061193e8261111e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119705761196f6116fd565b5b600182019050919050565b60008151905061198a8161137d565b92915050565b6000602082840312156119a6576119a5611119565b5b60006119b48482850161197b565b91505092915050565b60006040820190506119d26000830185611576565b6119df60208301846114e9565b9392505050565b6000815190506119f58161146a565b92915050565b600060208284031215611a1157611a10611119565b5b6000611a1f848285016119e6565b91505092915050565b611a3181611190565b8114611a3c57600080fd5b50565b600081519050611a4e81611a28565b92915050565b600060208284031215611a6a57611a69611119565b5b6000611a7884828501611a3f565b91505092915050565b6000611a8c82611370565b915060ff8203611a9f57611a9e6116fd565b5b600182019050919050565b7f5472616e7366657220746f20657363726f77206661696c656400000000000000600082015250565b6000611ae0601983611680565b9150611aeb82611aaa565b602082019050919050565b60006020820190508181036000830152611b0f81611ad3565b9050919050565b6000606082019050611b2b6000830186611576565b611b38602083018561130a565b611b456040830184611181565b949350505050565b600080fd5b600080fd5b60008085851115611b6b57611b6a611b4d565b5b83861115611b7c57611b7b611b52565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b6000611be28383611b92565b82611bed8135611b9d565b92506014821015611c2d57611c287fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611bc9565b831692505b50509291505056fea264697066735822122046f6ecfd62efa13079d79b07f979d1b7dc548c9c1999e0f73d48e90186dcb12964736f6c63430008150033";

type PaymentProcessorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentProcessor__factory extends ContractFactory {
  constructor(...args: PaymentProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    forwarderAddress: AddressLike,
    initialFeeRate: BigNumberish,
    priceTableAddress: AddressLike,
    profitEscrowAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      forwarderAddress,
      initialFeeRate,
      priceTableAddress,
      profitEscrowAddress,
      overrides || {}
    );
  }
  override deploy(
    forwarderAddress: AddressLike,
    initialFeeRate: BigNumberish,
    priceTableAddress: AddressLike,
    profitEscrowAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      forwarderAddress,
      initialFeeRate,
      priceTableAddress,
      profitEscrowAddress,
      overrides || {}
    ) as Promise<
      PaymentProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PaymentProcessor__factory {
    return super.connect(runner) as PaymentProcessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentProcessorInterface {
    return new Interface(_abi) as PaymentProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PaymentProcessor {
    return new Contract(address, _abi, runner) as unknown as PaymentProcessor;
  }
}
