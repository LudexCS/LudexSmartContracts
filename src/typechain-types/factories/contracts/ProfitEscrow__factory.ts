/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProfitEscrow,
  ProfitEscrowInterface,
} from "../../contracts/ProfitEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "itemRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceTable_",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarderAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newProcessor",
        type: "address",
      },
    ],
    name: "ProcessorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProfitAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProfitClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "accumulate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getBalanceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemRegistry",
    outputs: [
      {
        internalType: "contract ItemRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentProcessor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceTable",
    outputs: [
      {
        internalType: "contract PriceTable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "processor",
        type: "address",
      },
    ],
    name: "setPaymentProcessor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200162638038062001626833981810160405281019062000037919062000298565b33818082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a7919062000305565b60405180910390fd5b620000c1816200016a60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505062000322565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002608262000233565b9050919050565b620002728162000253565b81146200027e57600080fd5b50565b600081519050620002928162000267565b92915050565b600080600060608486031215620002b457620002b36200022e565b5b6000620002c48682870162000281565b9350506020620002d78682870162000281565b9250506040620002ea8682870162000281565b9150509250925092565b620002ff8162000253565b82525050565b60006020820190506200031c6000830184620002f4565b92915050565b60805160a05160c0516112cd6200035960003960006102ba015260008181610492015261081d015260006107ce01526112cd6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637da0a877116100715780637da0a877146101655780638da5cb5b14610183578063957047f6146101a1578063f1c6bdf8146101bf578063f2fde38b146101dd578063f5cb7c33146101f9576100b4565b8063088b0d75146100b9578063100f9bf8146100d557806320bc0c8f146100f3578063572b6c051461010f5780635e106fa71461013f578063715018a61461015b575b600080fd5b6100d360048036038101906100ce9190610ba4565b610229565b005b6100dd6102b8565b6040516100ea9190610c30565b60405180910390f35b61010d60048036038101906101089190610cbd565b6102dc565b005b61012960048036038101906101249190610ba4565b610439565b6040516101369190610d2b565b60405180910390f35b61015960048036038101906101549190610d46565b610478565b005b6101636107b6565b005b61016d6107ca565b60405161017a9190610da8565b60405180910390f35b61018b6107f2565b6040516101989190610da8565b60405180910390f35b6101a961081b565b6040516101b69190610de4565b60405180910390f35b6101c761083f565b6040516101d49190610da8565b60405180910390f35b6101f760048036038101906101f29190610ba4565b610865565b005b610213600480360381019061020e9190610dff565b6108eb565b6040516102209190610e4e565b60405180910390f35b610231610952565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f94d1eaaba297ffb0e6a23b867a3d6f936cca4ae0045709e596d461aee2e362ee60405160405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610ec6565b60405180910390fd5b80600260008563ffffffff1663ffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103d89190610f15565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168363ffffffff167fa5bad89c05c4fb73eb7cb9a2196edafb96670005a21bac4f045390455b04d7178360405161042c9190610e4e565b60405180910390a3505050565b60006104436107ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b823373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639479df9c836040518263ffffffff1660e01b81526004016104e99190610f58565b602060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a9190610f88565b73ffffffffffffffffffffffffffffffffffffffff1614610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790611001565b60405180910390fd5b6000600260008663ffffffff1663ffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b9061106d565b60405180910390fd5b6000600260008763ffffffff1663ffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016106c192919061108d565b6020604051808303816000875af11580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070491906110e2565b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a9061115b565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168663ffffffff167fbff0385f9eb39f0d66c723731d5e5d7c09e140ba89161769e6bee4969f9b8eab846040516107a79190610e4e565b60405180910390a45050505050565b6107be610952565b6107c860006109d9565b565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61086d610952565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108df5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108d69190610da8565b60405180910390fd5b6108e8816109d9565b50565b6000600260008463ffffffff1663ffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61095a610a9d565b73ffffffffffffffffffffffffffffffffffffffff166109786107f2565b73ffffffffffffffffffffffffffffffffffffffff16146109d75761099b610a9d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109ce9190610da8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610aa7610aac565b905090565b600080600036905090506000610ac0610b21565b9050610acb33610439565b8015610ad75750808210155b15610b11576000368284610aeb919061117b565b908092610afa939291906111b9565b90610b059190611238565b60601c92505050610b1e565b610b19610b30565b925050505b90565b6000610b2b610b38565b905090565b600033905090565b60006014905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7182610b46565b9050919050565b610b8181610b66565b8114610b8c57600080fd5b50565b600081359050610b9e81610b78565b92915050565b600060208284031215610bba57610bb9610b41565b5b6000610bc884828501610b8f565b91505092915050565b6000819050919050565b6000610bf6610bf1610bec84610b46565b610bd1565b610b46565b9050919050565b6000610c0882610bdb565b9050919050565b6000610c1a82610bfd565b9050919050565b610c2a81610c0f565b82525050565b6000602082019050610c456000830184610c21565b92915050565b600063ffffffff82169050919050565b610c6481610c4b565b8114610c6f57600080fd5b50565b600081359050610c8181610c5b565b92915050565b6000819050919050565b610c9a81610c87565b8114610ca557600080fd5b50565b600081359050610cb781610c91565b92915050565b600080600060608486031215610cd657610cd5610b41565b5b6000610ce486828701610c72565b9350506020610cf586828701610b8f565b9250506040610d0686828701610ca8565b9150509250925092565b60008115159050919050565b610d2581610d10565b82525050565b6000602082019050610d406000830184610d1c565b92915050565b600080600060608486031215610d5f57610d5e610b41565b5b6000610d6d86828701610c72565b9350506020610d7e86828701610b8f565b9250506040610d8f86828701610b8f565b9150509250925092565b610da281610b66565b82525050565b6000602082019050610dbd6000830184610d99565b92915050565b6000610dce82610bfd565b9050919050565b610dde81610dc3565b82525050565b6000602082019050610df96000830184610dd5565b92915050565b60008060408385031215610e1657610e15610b41565b5b6000610e2485828601610c72565b9250506020610e3585828601610b8f565b9150509250929050565b610e4881610c87565b82525050565b6000602082019050610e636000830184610e3f565b92915050565b600082825260208201905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610eb0600e83610e69565b9150610ebb82610e7a565b602082019050919050565b60006020820190508181036000830152610edf81610ea3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2082610c87565b9150610f2b83610c87565b9250828201905080821115610f4357610f42610ee6565b5b92915050565b610f5281610c4b565b82525050565b6000602082019050610f6d6000830184610f49565b92915050565b600081519050610f8281610b78565b92915050565b600060208284031215610f9e57610f9d610b41565b5b6000610fac84828501610f73565b91505092915050565b7f4e6f74206974656d2073656c6c65720000000000000000000000000000000000600082015250565b6000610feb600f83610e69565b9150610ff682610fb5565b602082019050919050565b6000602082019050818103600083015261101a81610fde565b9050919050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000611057601083610e69565b915061106282611021565b602082019050919050565b600060208201905081810360008301526110868161104a565b9050919050565b60006040820190506110a26000830185610d99565b6110af6020830184610e3f565b9392505050565b6110bf81610d10565b81146110ca57600080fd5b50565b6000815190506110dc816110b6565b92915050565b6000602082840312156110f8576110f7610b41565b5b6000611106848285016110cd565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611145600f83610e69565b91506111508261110f565b602082019050919050565b6000602082019050818103600083015261117481611138565b9050919050565b600061118682610c87565b915061119183610c87565b92508282039050818111156111a9576111a8610ee6565b5b92915050565b600080fd5b600080fd5b600080858511156111cd576111cc6111af565b5b838611156111de576111dd6111b4565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b600061124483836111f4565b8261124f81356111ff565b9250601482101561128f5761128a7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261122b565b831692505b50509291505056fea26469706673582212206f3f20c98ffe1c7b709bbea031dc236595ba4816f4c93d092f5397c4515652f064736f6c63430008150033";

type ProfitEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfitEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProfitEscrow__factory extends ContractFactory {
  constructor(...args: ProfitEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    itemRegistry_: AddressLike,
    priceTable_: AddressLike,
    forwarderAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      itemRegistry_,
      priceTable_,
      forwarderAddress,
      overrides || {}
    );
  }
  override deploy(
    itemRegistry_: AddressLike,
    priceTable_: AddressLike,
    forwarderAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      itemRegistry_,
      priceTable_,
      forwarderAddress,
      overrides || {}
    ) as Promise<
      ProfitEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProfitEscrow__factory {
    return super.connect(runner) as ProfitEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfitEscrowInterface {
    return new Interface(_abi) as ProfitEscrowInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProfitEscrow {
    return new Contract(address, _abi, runner) as unknown as ProfitEscrow;
  }
}
