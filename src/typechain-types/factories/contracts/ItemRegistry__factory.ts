/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ItemRegistry,
  ItemRegistryInterface,
} from "../../contracts/ItemRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "itemName",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "shareItemIDs",
        type: "uint32[]",
      },
    ],
    name: "ItemRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "resumed",
        type: "uint32[]",
      },
    ],
    name: "ItemSaleResumed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "suspension",
        type: "uint32[]",
      },
    ],
    name: "ItemSaleSuspended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller_",
        type: "address",
      },
    ],
    name: "getItemsOfSeller",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemRevenueSharers",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nameToHash",
        type: "string",
      },
    ],
    name: "nameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "numberOfSharers",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "itemNameHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "seller_",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "revenueSharers",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "usdPrice",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "shareTerms",
        type: "uint32[]",
      },
      {
        internalType: "uint16[]",
        name: "shares",
        type: "uint16[]",
      },
    ],
    name: "registerItem",
    outputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint32[]",
        name: "itemShareIDs",
        type: "uint32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
    ],
    name: "resumeItemSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "revenueSharerOfItem",
    outputs: [
      {
        internalType: "uint32",
        name: "parent",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "revenueSharingItems",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceTableAddress",
        type: "address",
      },
    ],
    name: "setPriceTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sellerProxy_",
        type: "address",
      },
    ],
    name: "setSellerProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
    ],
    name: "suspendItemSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "suspensions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "timestampRegistered",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "newSeller",
        type: "address",
      },
    ],
    name: "transferSellerRight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000885760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007f9190620001a9565b60405180910390fd5b6200009981620000a060201b60201c565b50620001c6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001918262000164565b9050919050565b620001a38162000184565b82525050565b6000602082019050620001c0600083018462000198565b92915050565b612ad880620001d66000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639479df9c116100a2578063c0a68a0411610071578063c0a68a0414610318578063cef3c69814610348578063e8bb0cb014610364578063f2fde38b14610380578063fdc615401461039c57610116565b80639479df9c146102805780639884c1c8146102b0578063b1fb0957146102e0578063bdafe05d146102fc57610116565b806368797c4c116100e957806368797c4c146101c7578063715018a6146101f7578063794707db146102015780638da5cb5b146102315780638f79678b1461024f57610116565b806301b8fc751461011b5780632c9ede6b1461014b5780633a803e4b1461016757806361e4001614610197575b600080fd5b61013560048036038101906101309190611b29565b6103cc565b6040516101429190611c24565b60405180910390f35b61016560048036038101906101609190611c72565b610793565b005b610181600480360381019061017c9190611cb2565b610a5c565b60405161018e9190611cfa565b60405180910390f35b6101b160048036038101906101ac9190611d7a565b610a7c565b6040516101be9190611de0565b60405180910390f35b6101e160048036038101906101dc9190611cb2565b610aaf565b6040516101ee9190611e17565b60405180910390f35b6101ff610acf565b005b61021b60048036038101906102169190611e68565b610ae3565b6040516102289190611eb7565b60405180910390f35b610239610b2c565b6040516102469190611ee1565b60405180910390f35b61026960048036038101906102649190611fd4565b610b55565b6040516102779291906120c3565b60405180910390f35b61029a60048036038101906102959190611cb2565b6112c3565b6040516102a79190611ee1565b60405180910390f35b6102ca60048036038101906102c59190611cb2565b6112f6565b6040516102d79190612102565b60405180910390f35b6102fa60048036038101906102f59190611b29565b61130e565b005b61031660048036038101906103119190611b29565b61135a565b005b610332600480360381019061032d9190612149565b6113a6565b60405161033f9190611eb7565b60405180910390f35b610362600480360381019061035d9190611cb2565b61140a565b005b61037e60048036038101906103799190611cb2565b611489565b005b61039a60048036038101906103959190611b29565b611508565b005b6103b660048036038101906103b19190611e68565b61158e565b6040516103c39190611eb7565b60405180910390f35b60606000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506000805b8263ffffffff168163ffffffff161015610543576000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061048657610485612189565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508573ffffffffffffffffffffffffffffffffffffffff16600160008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461052f57828061052b906121e7565b9350505b50808061053b906121e7565b915050610419565b50600081836105529190612213565b63ffffffff1667ffffffffffffffff8111156105715761057061224b565b5b60405190808252806020026020018201604052801561059f5781602001602082028036833780820191505090505b5090506000805b8463ffffffff168163ffffffff161015610786576000600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061061357610612612189565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508773ffffffffffffffffffffffffffffffffffffffff16600160008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106b35750610773565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061070a57610709612189565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16848463ffffffff168151811061074957610748612189565b5b602002602001019063ffffffff16908163ffffffff1681525050828061076e906121e7565b935050505b808061077e906121e7565b9150506105a6565b5081945050505050919050565b61079b610b2c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061087c5750600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561087b5750600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b6108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b2906122d7565b60405180910390fd5b600160008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109196115d7565b73ffffffffffffffffffffffffffffffffffffffff161461096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690612343565b60405180910390fd5b80600160008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055505050565b60076020528060005260406000206000915054906101000a900460ff1681565b60008282604051602001610a919291906123a2565b60405160208183030381529060405280519060200120905092915050565b60046020528060005260406000206000915054906101000a900460ff1681565b610ad76115df565b610ae16000611666565b565b60056020528160005260406000208181548110610aff57600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900463ffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060610b61610b2c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c425750600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610c415750600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c78906122d7565b60405180910390fd5b610cab8b8b604051602001610c979291906123bb565b60405160208183030381529060405261172a565b915089600160008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055508888600360008563ffffffff1663ffffffff1681526020019081526020016000209190610dc49291906119ee565b5060005b898990508161ffff161015610e8057600560008b8b8461ffff16818110610df257610df1612189565b5b9050602002016020810190610e079190611cb2565b63ffffffff1663ffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055508080610e78906123f2565b915050610dc8565b5042600660008463ffffffff1663ffffffff1681526020019081526020016000208190555088889050600460008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b7119066838960006040518463ffffffff1660e01b8152600401610f4093929190612461565b6020604051808303816000875af1158015610f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8391906124c4565b610f9057610f8f6124f1565b5b8585905067ffffffffffffffff811115610fad57610fac61224b565b5b604051908082528060200260200182016040528015610fdb5781602001602082028036833780820191505090505b50905060005b868690508161ffff16101561125c57600087878361ffff1681811061100957611008612189565b5b905060200201602081019061101e9190611cb2565b9050600061104c8583604051602001611038929190612520565b60405160208183030381529060405261172a565b90508c600160008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b71190668263ffffffff8a8a8861ffff1681811061119257611191612189565b5b90506020020160208101906111a79190612575565b6040518463ffffffff1660e01b81526004016111c5939291906125e2565b6020604051808303816000875af11580156111e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120891906124c4565b611215576112146124f1565b5b80848461ffff168151811061122d5761122c612189565b5b602002602001019063ffffffff16908163ffffffff168152505050508080611254906123f2565b915050610fe1565b508163ffffffff168a73ffffffffffffffffffffffffffffffffffffffff168c7fc4fded964a59e6b74a095216478c71b95d15793121f048793487bf7b5c71f0ba8a856040516112ad929190612619565b60405180910390a4995099975050505050505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b6113166115df565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6113626115df565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360008463ffffffff1663ffffffff1681526020019081526020016000208260ff16815481106113dc576113db612189565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905092915050565b6114126115df565b60006008600060096000815461142790612649565b91905081905581526020019081526020016000209050611447828261178e565b8163ffffffff167f5d5827d08a2154252aeb2169641f3a576cd3bd5f206215da5387963dc5f073718260405161147d9190612a57565b60405180910390a25050565b6114916115df565b6000600860006009600081546114a690612649565b919050819055815260200190815260200160002090506114c682826118be565b8163ffffffff167f0b4e9a2b2e24f5320fdec7a8f809964bee7f85431d288a2e211d9c8670a8c608826040516114fc9190612a57565b60405180910390a25050565b6115106115df565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115825760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115799190611ee1565b60405180910390fd5b61158b81611666565b50565b600360205281600052604060002081815481106115aa57600080fd5b9060005260206000209060089182820401919006600402915091509054906101000a900463ffffffff1681565b600033905090565b6115e76115d7565b73ffffffffffffffffffffffffffffffffffffffff16611605610b2c565b73ffffffffffffffffffffffffffffffffffffffff1614611664576116286115d7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161165b9190611ee1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806301000193905063811c9dc5915060005b83518110156117875783818151811061175a57611759612189565b5b602001015160f81c60f81b60f81c60ff16831892508183029250808061177f90612649565b91505061173e565b5050919050565b808290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055506001600760008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b600560008463ffffffff1663ffffffff168152602001908152602001600020805490508160ff1610156118b9576118a6600560008563ffffffff1663ffffffff1681526020019081526020016000208260ff168154811061187a57611879612189565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff168361178e565b80806118b190612a79565b915050611816565b505050565b808290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055506001600760008463ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b600560008463ffffffff1663ffffffff168152602001908152602001600020805490508160ff1610156119e9576119d6600560008563ffffffff1663ffffffff1681526020019081526020016000208260ff16815481106119aa576119a9612189565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16836118be565b80806119e190612a79565b915050611946565b505050565b82805482825590600052602060002090600701600890048101928215611a935791602002820160005b83821115611a6157833563ffffffff1683826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302611a17565b8015611a915782816101000a81549063ffffffff0219169055600401602081600301049283019260010302611a61565b505b509050611aa09190611aa4565b5090565b5b80821115611abd576000816000905550600101611aa5565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611af682611acb565b9050919050565b611b0681611aeb565b8114611b1157600080fd5b50565b600081359050611b2381611afd565b92915050565b600060208284031215611b3f57611b3e611ac1565b5b6000611b4d84828501611b14565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b611b9b81611b82565b82525050565b6000611bad8383611b92565b60208301905092915050565b6000602082019050919050565b6000611bd182611b56565b611bdb8185611b61565b9350611be683611b72565b8060005b83811015611c17578151611bfe8882611ba1565b9750611c0983611bb9565b925050600181019050611bea565b5085935050505092915050565b60006020820190508181036000830152611c3e8184611bc6565b905092915050565b611c4f81611b82565b8114611c5a57600080fd5b50565b600081359050611c6c81611c46565b92915050565b60008060408385031215611c8957611c88611ac1565b5b6000611c9785828601611c5d565b9250506020611ca885828601611b14565b9150509250929050565b600060208284031215611cc857611cc7611ac1565b5b6000611cd684828501611c5d565b91505092915050565b60008115159050919050565b611cf481611cdf565b82525050565b6000602082019050611d0f6000830184611ceb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d3a57611d39611d15565b5b8235905067ffffffffffffffff811115611d5757611d56611d1a565b5b602083019150836001820283011115611d7357611d72611d1f565b5b9250929050565b60008060208385031215611d9157611d90611ac1565b5b600083013567ffffffffffffffff811115611daf57611dae611ac6565b5b611dbb85828601611d24565b92509250509250929050565b6000819050919050565b611dda81611dc7565b82525050565b6000602082019050611df56000830184611dd1565b92915050565b600060ff82169050919050565b611e1181611dfb565b82525050565b6000602082019050611e2c6000830184611e08565b92915050565b6000819050919050565b611e4581611e32565b8114611e5057600080fd5b50565b600081359050611e6281611e3c565b92915050565b60008060408385031215611e7f57611e7e611ac1565b5b6000611e8d85828601611c5d565b9250506020611e9e85828601611e53565b9150509250929050565b611eb181611b82565b82525050565b6000602082019050611ecc6000830184611ea8565b92915050565b611edb81611aeb565b82525050565b6000602082019050611ef66000830184611ed2565b92915050565b611f0581611dc7565b8114611f1057600080fd5b50565b600081359050611f2281611efc565b92915050565b60008083601f840112611f3e57611f3d611d15565b5b8235905067ffffffffffffffff811115611f5b57611f5a611d1a565b5b602083019150836020820283011115611f7757611f76611d1f565b5b9250929050565b60008083601f840112611f9457611f93611d15565b5b8235905067ffffffffffffffff811115611fb157611fb0611d1a565b5b602083019150836020820283011115611fcd57611fcc611d1f565b5b9250929050565b600080600080600080600080600060c08a8c031215611ff657611ff5611ac1565b5b60006120048c828d01611f13565b99505060206120158c828d01611b14565b98505060408a013567ffffffffffffffff81111561203657612035611ac6565b5b6120428c828d01611f28565b975097505060606120558c828d01611e53565b95505060808a013567ffffffffffffffff81111561207657612075611ac6565b5b6120828c828d01611f28565b945094505060a08a013567ffffffffffffffff8111156120a5576120a4611ac6565b5b6120b18c828d01611f7e565b92509250509295985092959850929598565b60006040820190506120d86000830185611ea8565b81810360208301526120ea8184611bc6565b90509392505050565b6120fc81611e32565b82525050565b600060208201905061211760008301846120f3565b92915050565b61212681611dfb565b811461213157600080fd5b50565b6000813590506121438161211d565b92915050565b600080604083850312156121605761215f611ac1565b5b600061216e85828601611c5d565b925050602061217f85828601612134565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121f282611b82565b915063ffffffff8203612208576122076121b8565b5b600182019050919050565b600061221e82611b82565b915061222983611b82565b9250828203905063ffffffff811115612245576122446121b8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f4e6f74206120726567697374726174696f6e2068616e646c6572000000000000600082015250565b60006122c1601a8361227a565b91506122cc8261228b565b602082019050919050565b600060208201905081810360008301526122f0816122b4565b9050919050565b7f4e6f74206974656d2073656c6c65720000000000000000000000000000000000600082015250565b600061232d600f8361227a565b9150612338826122f7565b602082019050919050565b6000602082019050818103600083015261235c81612320565b9050919050565b600081905092915050565b82818337600083830152505050565b60006123898385612363565b935061239683858461236e565b82840190509392505050565b60006123af82848661237d565b91508190509392505050565b60006040820190506123d06000830185611dd1565b6123dd6020830184611ed2565b9392505050565b600061ffff82169050919050565b60006123fd826123e4565b915061ffff8203612411576124106121b8565b5b600182019050919050565b6000819050919050565b6000819050919050565b600061244b6124466124418461241c565b612426565b6123e4565b9050919050565b61245b81612430565b82525050565b60006060820190506124766000830186611ea8565b61248360208301856120f3565b6124906040830184612452565b949350505050565b6124a181611cdf565b81146124ac57600080fd5b50565b6000815190506124be81612498565b92915050565b6000602082840312156124da576124d9611ac1565b5b60006124e8848285016124af565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006040820190506125356000830185611ea8565b6125426020830184611ea8565b9392505050565b612552816123e4565b811461255d57600080fd5b50565b60008135905061256f81612549565b92915050565b60006020828403121561258b5761258a611ac1565b5b600061259984828501612560565b91505092915050565b60006125bd6125b86125b384611b82565b612426565b611e32565b9050919050565b6125cd816125a2565b82525050565b6125dc816123e4565b82525050565b60006060820190506125f76000830186611ea8565b61260460208301856125c4565b61261160408301846125d3565b949350505050565b600060408201905061262e60008301856120f3565b81810360208301526126408184611bc6565b90509392505050565b600061265482611e32565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612686576126856121b8565b5b600182019050919050565b600081549050919050565b60008190508160005260206000209050919050565b60008160001c9050919050565b600063ffffffff82169050919050565b60006126e16126dc836126b1565b6126be565b9050919050565b60008160201c9050919050565b6000612708612703836126e8565b6126be565b9050919050565b60008160401c9050919050565b600061272f61272a8361270f565b6126be565b9050919050565b60008160601c9050919050565b600061275661275183612736565b6126be565b9050919050565b60008160801c9050919050565b600061277d6127788361275d565b6126be565b9050919050565b60008160a01c9050919050565b60006127a461279f83612784565b6126be565b9050919050565b60008160c01c9050919050565b60006127cb6127c6836127ab565b6126be565b9050919050565b60008160e01c9050919050565b60006127f26127ed836127d2565b6126be565b9050919050565b600061280482612691565b61280e8185611b61565b93508361281a8461269c565b6000600115612907575b8360016008038201101561290657815461284688612841836126ce565b611b92565b60208801975061285e88612859836126f5565b611b92565b602088019750612876886128718361271c565b611b92565b60208801975061288e8861288983612743565b611b92565b6020880197506128a6886128a18361276a565b611b92565b6020880197506128be886128b983612791565b611b92565b6020880197506128d6886128d1836127b8565b611b92565b6020880197506128ee886128e9836127df565b611b92565b60208801975060018301925050600881019050612824565b5b600115612a4a578154848210156129375761292a88612925836126ce565b611b92565b6020880197506001820191505b8482101561295e576129518861294c836126f5565b611b92565b6020880197506001820191505b8482101561298557612978886129738361271c565b611b92565b6020880197506001820191505b848210156129ac5761299f8861299a83612743565b611b92565b6020880197506001820191505b848210156129d3576129c6886129c18361276a565b611b92565b6020880197506001820191505b848210156129fa576129ed886129e883612791565b611b92565b6020880197506001820191505b84821015612a2157612a1488612a0f836127b8565b611b92565b6020880197506001820191505b84821015612a4857612a3b88612a36836127df565b611b92565b6020880197506001820191505b505b8694505050505092915050565b60006020820190508181036000830152612a7181846127f9565b905092915050565b6000612a8482611dfb565b915060ff8203612a9757612a966121b8565b5b60018201905091905056fea2646970667358221220b5d967c6d3efc32f4f890cb5716cea37235bb8174ebde8c7f22bc987b6414f6664736f6c63430008150033";

type ItemRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ItemRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ItemRegistry__factory extends ContractFactory {
  constructor(...args: ItemRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ItemRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ItemRegistry__factory {
    return super.connect(runner) as ItemRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ItemRegistryInterface {
    return new Interface(_abi) as ItemRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ItemRegistry {
    return new Contract(address, _abi, runner) as unknown as ItemRegistry;
  }
}
