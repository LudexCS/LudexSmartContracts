/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SellerProxy,
  SellerProxyInterface,
} from "../../contracts/SellerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "paymentProcessor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "itemShareIDs",
        type: "uint32[]",
      },
    ],
    name: "ItemRegistrationDelegated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
    ],
    name: "ProfitClaimDelegated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "items",
        type: "uint32[]",
      },
    ],
    name: "SellerRightClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "newUsdPrice",
        type: "uint256",
      },
    ],
    name: "changeItemPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "newSharePermyriad",
        type: "uint16",
      },
    ],
    name: "changeRevShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32[]",
        name: "items",
        type: "uint32[]",
      },
      {
        internalType: "address",
        name: "sellerAddress",
        type: "address",
      },
    ],
    name: "claimSellerRight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
    ],
    name: "getItemsOfSeller",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "itemNameHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32[]",
        name: "revenueSharers",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "usdPrice",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "shareTerms",
        type: "uint32[]",
      },
      {
        internalType: "uint16[]",
        name: "shares",
        type: "uint16[]",
      },
    ],
    name: "registerItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "discountPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "startDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sellerID",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "itemID",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "reducedShare",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "startRevShareReductionEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000037576200001e6200001862000116565b620003b8565b620000286200003d565b611d1e6200073c8239611d1e90f35b62000043565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90620000749062000048565b810190811060018060401b038211176200008d57604052565b62000052565b90620000aa620000a26200003d565b928362000068565b565b600080fd5b60018060a01b031690565b620000c790620000b1565b90565b620000d581620000bc565b03620000dd57565b600080fd5b90505190620000f182620000ca565b565b9060208282031262000110576200010d91600001620000e2565b90565b620000ac565b620001396200245a803803806200012d8162000093565b928339810190620000f3565b90565b90565b62000158620001526200015e92620000b1565b6200013c565b620000b1565b90565b6200016c906200013f565b90565b6200017a9062000161565b90565b62000188906200013f565b90565b62000196906200017d565b90565b60e01b90565b620001aa90620000bc565b90565b620001b8816200019f565b03620001c057565b600080fd5b90505190620001d482620001ad565b565b90602082820312620001f357620001f091600001620001c5565b90565b620000ac565b60000190565b620002096200003d565b3d6000823e3d90fd5b60001b90565b906200022b60018060a01b039162000212565b9181191691161790565b62000240906200013f565b90565b6200024e9062000235565b90565b90565b906200026e62000268620002769262000243565b62000251565b825462000218565b9055565b6200028590620000bc565b90565b62000293816200027a565b036200029b57565b600080fd5b90505190620002af8262000288565b565b90602082820312620002ce57620002cb91600001620002a0565b90565b620000ac565b620002df906200013f565b90565b620002ed90620002d4565b90565b90565b906200030d620003076200031592620002e2565b620002f0565b825462000218565b9055565b6200032490620000bc565b90565b620003328162000319565b036200033a57565b600080fd5b905051906200034e8262000327565b565b906020828203126200036d576200036a916000016200033f565b90565b620000ac565b6200037e906200013f565b90565b6200038c9062000373565b90565b90565b90620003ac620003a6620003b49262000381565b6200038f565b825462000218565b9055565b620003ce90620003c833620005f5565b6200016f565b620003f86020620003df836200018b565b63957047f690620003ef6200003d565b93849262000199565b825281806200040a60048201620001f9565b03915afa801562000595576200042c9160009162000560575b50600162000254565b6200045660206200043d836200018b565b635ada0c29906200044d6200003d565b93849262000199565b825281806200046860048201620001f9565b03915afa80156200055a57620004b592620004966200049c9260209460009162000526575b506002620002f3565b6200018b565b63100f9bf890620004ac6200003d565b93849262000199565b82528180620004c760048201620001f9565b03915afa80156200052057620004e991600091620004eb575b50600362000392565b565b62000511915060203d811162000518575b62000508818362000068565b81019062000350565b38620004e0565b503d620004fc565b620001ff565b6200054b9150853d811162000552575b62000542818362000068565b810190620002b1565b386200048d565b503d62000536565b620001ff565b62000586915060203d81116200058d575b6200057d818362000068565b810190620001d6565b3862000423565b503d62000571565b620001ff565b90565b620005b7620005b1620005bd926200059b565b6200013c565b620000b1565b90565b620005cb906200059e565b90565b620005d990620000bc565b9052565b9190620005f390600060208501940190620005ce565b565b8062000617620006106200060a6000620005c0565b620000bc565b91620000bc565b146200062a576200062890620006ce565b565b6200065b6200063a6000620005c0565b620006446200003d565b918291631e4fbdf760e01b835260048301620005dd565b0390fd5b60001c90565b60018060a01b031690565b6200067f62000685916200065f565b62000665565b90565b62000694905462000670565b90565b620006a2906200017d565b90565b90565b90620006c2620006bc620006ca9262000697565b620006a5565b825462000218565b9055565b620006da600062000688565b620006e7826000620006a8565b906200071f620007187f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000697565b9162000697565b916200072a6200003d565b806200073681620001f9565b0390a356fe60806040526004361015610013575b610811565b61001e6000356100cd565b8063018a7449146100c8578063019e2f65146100c357806306cb7f4c146100be5780631cbf1330146100b9578063715018a6146100b45780638da5cb5b146100af5780639e2c3755146100aa5780639e8595dd146100a5578063b7958936146100a0578063dae3fe4e1461009b5763f2fde38b0361000e576107de565b610788565b61070c565b61060f565b6104bf565b610443565b6103ed565b6103a6565b610328565b610217565b61017d565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b63ffffffff1690565b6100fa816100e8565b0361010157565b600080fd5b90503590610113826100f1565b565b90565b61012181610115565b0361012857565b600080fd5b9050359061013a82610118565b565b90916060828403126101725761016f6101588460008501610106565b936101668160208601610106565b9360400161012d565b90565b6100de565b60000190565b346101ac5761019661019036600461013c565b9161195e565b61019e6100d3565b806101a881610177565b0390f35b6100d9565b61ffff1690565b6101c1816101b1565b036101c857565b600080fd5b905035906101da826101b8565b565b90916060828403126102125761020f6101f88460008501610106565b936102068160208601610106565b936040016101cd565b90565b6100de565b346102465761023061022a3660046101dc565b91611baf565b6102386100d3565b8061024281610177565b0390f35b6100d9565b600080fd5b600080fd5b600080fd5b909182601f830112156102945781359167ffffffffffffffff831161028f57602001926020830284011161028a57565b610255565b610250565b61024b565b60018060a01b031690565b6102ad90610299565b90565b6102b9816102a4565b036102c057565b600080fd5b905035906102d2826102b0565b565b90606082820312610323576102ec8160008401610106565b92602083013567ffffffffffffffff811161031e576103108361031b92860161025a565b9390946040016102c5565b90565b6100e3565b6100de565b3461035a5761034461033b3660046102d4565b9291909161180d565b61034c6100d3565b8061035681610177565b0390f35b6100d9565b6080818303126103a1576103768260008301610106565b9261039e6103878460208501610106565b93610395816040860161012d565b9360600161012d565b90565b6100de565b346103d8576103c26103b936600461035f565b92919091611a89565b6103ca6100d3565b806103d481610177565b0390f35b6100d9565b60009103126103e857565b6100de565b3461041b576103fd3660046103dd565b6104056108b7565b61040d6100d3565b8061041781610177565b0390f35b6100d9565b610429906102a4565b9052565b919061044190600060208501940190610420565b565b34610473576104533660046103dd565b61046f61045e61084d565b6104666100d3565b9182918261042d565b0390f35b6100d9565b6080818303126104ba5761048f8260008301610106565b926104b76104a08460208501610106565b936104ae81604086016102c5565b936060016102c5565b90565b6100de565b346104f1576104db6104d2366004610478565b929190916115f7565b6104e36100d3565b806104ed81610177565b0390f35b6100d9565b90565b610502816104f6565b0361050957565b600080fd5b9050359061051b826104f9565b565b909182601f830112156105575781359167ffffffffffffffff831161055257602001926020830284011161054d57565b610255565b610250565b61024b565b91909160c08184031261060a57610576836000830161050e565b926105848160208401610106565b92604083013567ffffffffffffffff811161060557826105a591850161025a565b9290936105b5826060830161012d565b92608082013567ffffffffffffffff811161060057836105d691840161025a565b92909360a082013567ffffffffffffffff81116105fb576105f7920161051d565b9091565b6100e3565b6100e3565b6100e3565b6100de565b346106475761063161062236600461055c565b97969096959195949294611189565b6106396100d3565b8061064381610177565b0390f35b6100d9565b906020828203126106665761066391600001610106565b90565b6100de565b5190565b60209181520190565b60200190565b610687906100e8565b9052565b906106988160209361067e565b0190565b60200190565b906106bf6106b96106b28461066b565b809361066f565b92610678565b9060005b8181106106d05750505090565b9091926106e96106e3600192865161068b565b9461069c565b91019190916106c3565b61070991602082019160008184039101526106a2565b90565b3461073c5761073861072761072236600461064c565b6112d6565b61072f6100d3565b918291826106f3565b0390f35b6100d9565b608081830312610783576107588260008301610106565b926107806107698460208501610106565b9361077781604086016101cd565b9360600161012d565b90565b6100de565b346107ba576107a461079b366004610741565b92919091611cda565b6107ac6100d3565b806107b681610177565b0390f35b6100d9565b906020828203126107d9576107d6916000016102c5565b90565b6100de565b3461080c576107f66107f13660046107bf565b610984565b6107fe6100d3565b8061080881610177565b0390f35b6100d9565b600080fd5b600090565b60001c90565b60018060a01b031690565b61083861083d9161081b565b610821565b90565b61084a905461082c565b90565b610855610816565b506108606000610840565b90565b61086b6108c1565b6108736108a3565b565b90565b90565b61088f61088a61089492610875565b610878565b610299565b90565b6108a09061087b565b90565b6108b56108b06000610897565b610a07565b565b6108bf610863565b565b6108c961084d565b6108e26108dc6108d7610a68565b6102a4565b916102a4565b036108e957565b6109126108f4610a68565b6108fc6100d3565b91829163118cdaa760e01b83526004830161042d565b0390fd5b610927906109226108c1565b610929565b565b8061094561093f61093a6000610897565b6102a4565b916102a4565b146109555761095390610a07565b565b6109806109626000610897565b61096a6100d3565b918291631e4fbdf760e01b83526004830161042d565b0390fd5b61098d90610916565b565b60001b90565b906109a660018060a01b039161098f565b9181191691161790565b6109c46109bf6109c992610299565b610878565b610299565b90565b6109d5906109b0565b90565b6109e1906109cc565b90565b90565b906109fc6109f7610a03926109d8565b6109e4565b8254610995565b9055565b610a116000610840565b610a1c8260006109e7565b90610a50610a4a7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936109d8565b916109d8565b91610a596100d3565b80610a6381610177565b0390a3565b610a70610816565b503390565b90610a8e9897969594939291610a896108c1565b610fc0565b565b60018060a01b031690565b610aa7610aac9161081b565b610a90565b90565b610ab99054610a9b565b90565b610ac5906109cc565b90565b610ad1906109cc565b90565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610b0390610ad9565b810190811067ffffffffffffffff821117610b1d57604052565b610ae3565b60e01b90565b90505190610b35826100f1565b565b90610b4a610b436100d3565b9283610af9565b565b67ffffffffffffffff8111610b645760208091020190565b610ae3565b90929192610b7e610b7982610b4c565b610b37565b9381855260208086019202830192818411610bbb57915b838310610ba25750505050565b60208091610bb08486610b28565b815201920191610b95565b610255565b9080601f83011215610bde57816020610bdb93519101610b69565b90565b61024b565b919091604081840312610c2457610bfd8360008301610b28565b92602082015167ffffffffffffffff8111610c1f57610c1c9201610bc0565b90565b6100e3565b6100de565b610c32906104f6565b9052565b90565b50610c48906020810190610106565b90565b60200190565b91610c5f82610c659261066f565b92610c36565b90816000905b828210610c79575050505090565b90919293610c9b610c95600192610c908886610c39565b61068b565b95610c4b565b920190929192610c6b565b610caf90610115565b9052565b60209181520190565b90565b610cc8906101b1565b9052565b90610cd981602093610cbf565b0190565b50610cec9060208101906101cd565b90565b60200190565b91610d0382610d0992610cb3565b92610cbc565b90816000905b828210610d1d575050505090565b90919293610d3f610d39600192610d348886610cdd565b610ccc565b95610cef565b920190929192610d0f565b979591610d9791610da49695610db29b9995610d7f610d8c9460208e610d7860c08201976000830190610c29565b0190610420565b8b830360408d0152610c51565b936060890190610ca6565b8683036080880152610c51565b9260a0818503910152610cf5565b90565b610dbd6100d3565b3d6000823e3d90fd5b610dda610dd5610ddf926100e8565b610878565b6100e8565b90565b90610dec90610dc6565b600052602052604060002090565b90610e0963ffffffff9161098f565b9181191691161790565b90565b90610e2b610e26610e3292610dc6565b610e13565b8254610dfa565b9055565b90610e4090610dc6565b600052602052604060002090565b90565b600052602060002090565b634e487b7160e01b600052603260045260246000fd5b5490565b919091610e8281610e72565b831015610ea0576008610e96600492610e51565b8185040193060290565b610e5c565b1b90565b91906008610ec7910291610ec163ffffffff84610ea5565b92610ea5565b9181191691161790565b9190610ee7610ee2610eef93610dc6565b610e13565b908354610ea9565b9055565b9081549168010000000000000000831015610f235782610f1b916001610f2195018155610e76565b90610ed1565b565b610ae3565b610f3c610f37610f4192610875565b610878565b6101b1565b90565b634e487b7160e01b600052601160045260246000fd5b610f63906101b1565b61ffff8114610f725760010190565b610f44565b610f8b610f86610f90926101b1565b610878565b610115565b90565b90610f9d8261066b565b811015610fae576020809102010190565b610e5c565b610fbd90516100e8565b90565b9391949297909896610fd26001610aaf565b610fdb90610abc565b96638f79678b959430610fed90610ac8565b979a949091929394610ffd6100d3565b9b8c9961100a8b9a610b22565b8a5260048a019861101a99610d4a565b03815a6000948591f180156111845760008093909161115c575b50919061104c8461104760048690610de2565b610e16565b61106a61106361105e60058790610e36565b610e4e565b8490610ef3565b6110746000610f28565b5b8061109061108a6110858661066b565b610115565b91610f77565b101561110b57611106906110c9866110c460046110be6110b9896110b388610f77565b90610f93565b610fb3565b90610de2565b610e16565b6111016110e06110db60058990610e36565b610e4e565b6110fb6110f6876110f086610f77565b90610f93565b610fb3565b90610ef3565b610f5a565b611075565b5092909161115761114561113f7fc593425ee487e10240c9c5996c209136579a94e9f65302ee113c9e6c49381ac693610dc6565b93610dc6565b9361114e6100d3565b918291826106f3565b0390a3565b905061117c9192503d806000833e6111748183610af9565b810190610be3565b919038611034565b610db5565b9061119a9897969594939291610a75565b565b606090565b5490565b6111b96111b46111be92610115565b610878565b6100e8565b90565b6111d56111d06111da926100e8565b610878565b610115565b90565b906111ef6111ea83610b4c565b610b37565b918252565b369037565b9061121e611206836111dd565b926020806112148693610b4c565b92019103906111f4565b565b61123461122f61123992610875565b610878565b6100e8565b90565b611245906100e8565b63ffffffff81146112565760010190565b610f44565b600052602060002090565b919091611272816111a1565b83101561129057600861128660049261125b565b8185040193060290565b610e5c565b1c90565b63ffffffff1690565b6112b29060086112b79302611295565b611299565b90565b906112c591546112a2565b90565b906112d2906100e8565b9052565b906112df61119c565b506112fc6112f76112f260058590610e36565b6111a1565b6111a5565b9161130e611309846111c1565b6111f9565b916113196000611220565b5b8061132d611327876100e8565b916100e8565b101561137b576113769061137161135961135361134c60058890610e36565b8490611266565b906112ba565b61136c87611366856111c1565b90610f93565b6112c8565b61123c565b61131a565b5092505090565b906113969392916113916108c1565b611446565b565b6113a46113a99161081b565b611299565b90565b6113b69054611398565b90565b60209181520190565b60007f4e6f74206974656d2073656c6c65720000000000000000000000000000000000910152565b6113f7600f6020926113b9565b611400816113c2565b0190565b61141a90602081019060008183039101526113ea565b90565b1561142457565b61142c6100d3565b62461bcd60e51b81528061144260048201611404565b0390fd5b9061148293929161147d8261147761147161146b61146686946004610de2565b6113ac565b926100e8565b916100e8565b1461141d565b61150c565b565b60018060a01b031690565b61149b6114a09161081b565b611484565b90565b6114ad905461148f565b90565b6114b9906109cc565b90565b60009103126114c757565b6100de565b6114d5906100e8565b9052565b60409061150361150a94969593966114f9606084019860008501906114cc565b6020830190610420565b0190610420565b565b509061152061151b60026114a3565b6114b0565b635e106fa78383928692813b156115f25760006115509161155b82966115446100d3565b98899788968795610b22565b8552600485016114d9565b03925af180156115ed576115c0575b50916115a86115a261159c7fec11181c689022a5cc6ccc655e5eb6b941355c9fb21cdcf09582485c23b8dd10956109d8565b926109d8565b92610dc6565b926115b16100d3565b806115bb81610177565b0390a4565b6115e09060003d81116115e6575b6115d88183610af9565b8101906114bc565b3861156a565b503d6115ce565b610db5565b610ad4565b90611603939291611382565b565b906116199392916116146108c1565b611680565b565b5090565b919081101561162f576020020190565b610e5c565b3561163e816100f1565b90565b91602061166392949361165c604082019660008301906114cc565b0190610420565b565b909161167d9260208301926000818503910152610c51565b90565b939290919361168f6000611220565b5b806116ad6116a76116a2878a9061161b565b610115565b916111c1565b10156117b9576116fd6116e56116e060046116da6116d5898c6116cf896111c1565b9161161f565b611634565b90610de2565b6113ac565b6116f76116f1856100e8565b916100e8565b1461141d565b61170f61170a6001610aaf565b610abc565b90632c9ede6b61173161172c878a611726866111c1565b9161161f565b611634565b8593803b156117b4576117586000809461176361174c6100d3565b98899687958694610b22565b845260048401611641565b03925af19182156117af5761177d92611782575b5061123c565b611690565b6117a29060003d81116117a8575b61179a8183610af9565b8101906114bc565b38611777565b503d611790565b610db5565b610ad4565b509392939091926117f36117ed7f5751cced274fa533356560ef0b60c0e74319ab6693096dfbfc3305880e2bef7693610dc6565b936109d8565b936118086117ff6100d3565b92839283611665565b0390a3565b90611819939291611605565b565b9061182e92916118296108c1565b611830565b565b9061186b92916118668261186061185a61185461184f86946004610de2565b6113ac565b926100e8565b916100e8565b1461141d565b6118c9565b565b60018060a01b031690565b6118846118899161081b565b61186d565b90565b6118969054611878565b90565b6118a2906109cc565b90565b9160206118c79294936118c0604082019660008301906114cc565b0190610ca6565b565b506118dc6118d7600361188c565b611899565b916315dcd788919092803b156119595761190a600080946119156118fe6100d3565b97889687958694610b22565b8452600484016118a5565b03925af1801561195457611927575b50565b6119479060003d811161194d575b61193f8183610af9565b8101906114bc565b38611924565b503d611935565b610db5565b610ad4565b90611969929161181b565b565b9061197f93929161197a6108c1565b611981565b565b906119bd9392916119b8826119b26119ac6119a66119a186946004610de2565b6113ac565b926100e8565b916100e8565b1461141d565b6119f2565b565b6040906119e96119f094969593966119df606084019860008501906114cc565b6020830190610ca6565b0190610ca6565b565b5090611a06611a01600361188c565b611899565b63d0048f1092919392813b15611a84576000611a3591611a408296611a296100d3565b98899788968795610b22565b8552600485016119bf565b03925af18015611a7f57611a52575b50565b611a729060003d8111611a78575b611a6a8183610af9565b8101906114bc565b38611a4f565b503d611a60565b610db5565b610ad4565b90611a9593929161196b565b565b90611aaa9291611aa56108c1565b611aac565b565b90611ae79291611ae282611adc611ad6611ad0611acb86946004610de2565b6113ac565b926100e8565b916100e8565b1461141d565b611b1a565b565b611af2906101b1565b9052565b916020611b18929493611b11604082019660008301906114cc565b0190611ae9565b565b50611b2d611b28600361188c565b611899565b91634ea88c99919092803b15611baa57611b5b60008094611b66611b4f6100d3565b97889687958694610b22565b845260048401611af6565b03925af18015611ba557611b78575b50565b611b989060003d8111611b9e575b611b908183610af9565b8101906114bc565b38611b75565b503d611b86565b610db5565b610ad4565b90611bba9291611a97565b565b90611bd0939291611bcb6108c1565b611bd2565b565b90611c0e939291611c0982611c03611bfd611bf7611bf286946004610de2565b6113ac565b926100e8565b916100e8565b1461141d565b611c43565b565b604090611c3a611c419496959396611c30606084019860008501906114cc565b6020830190611ae9565b0190610ca6565b565b5090611c57611c52600361188c565b611899565b63d0a91a8792919392813b15611cd5576000611c8691611c918296611c7a6100d3565b98899788968795610b22565b855260048501611c10565b03925af18015611cd057611ca3575b50565b611cc39060003d8111611cc9575b611cbb8183610af9565b8101906114bc565b38611ca0565b503d611cb1565b610db5565b610ad4565b90611ce6939291611bbc565b56fea2646970667358221220b99eb4f914a32e9027b3f7f3173c98a0b32eb8bbe0424e6a49fa215e1761ce9464736f6c63430008150033";

type SellerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SellerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SellerProxy__factory extends ContractFactory {
  constructor(...args: SellerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    paymentProcessor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(paymentProcessor, overrides || {});
  }
  override deploy(
    paymentProcessor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(paymentProcessor, overrides || {}) as Promise<
      SellerProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SellerProxy__factory {
    return super.connect(runner) as SellerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SellerProxyInterface {
    return new Interface(_abi) as SellerProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SellerProxy {
    return new Contract(address, _abi, runner) as unknown as SellerProxy;
  }
}
