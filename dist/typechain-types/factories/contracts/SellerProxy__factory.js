"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SellerProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "paymentProcessor",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "itemID",
                type: "uint32",
            },
            {
                indexed: true,
                internalType: "uint32",
                name: "sellerID",
                type: "uint32",
            },
        ],
        name: "ItemRegistrationDelegated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint32",
                name: "itemID",
                type: "uint32",
            },
        ],
        name: "ProfitClaimDelegated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint32",
                name: "sellerID",
                type: "uint32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sellerAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint32[]",
                name: "items",
                type: "uint32[]",
            },
        ],
        name: "SellerRightClaimed",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "sellerID",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "itemID",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
        ],
        name: "claimProfit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "sellerID",
                type: "uint32",
            },
            {
                internalType: "uint32[]",
                name: "items",
                type: "uint32[]",
            },
            {
                internalType: "address",
                name: "sellerAddress",
                type: "address",
            },
        ],
        name: "claimSellerRight",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "sellerID",
                type: "uint32",
            },
        ],
        name: "getItemsOfSeller",
        outputs: [
            {
                internalType: "uint32[]",
                name: "",
                type: "uint32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "itemNameHash",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "sellerID",
                type: "uint32",
            },
            {
                internalType: "uint32[]",
                name: "revenueSharers",
                type: "uint32[]",
            },
            {
                internalType: "uint256",
                name: "usdPrice",
                type: "uint256",
            },
            {
                internalType: "uint32[]",
                name: "shareTerms",
                type: "uint32[]",
            },
            {
                internalType: "uint16[]",
                name: "shares",
                type: "uint16[]",
            },
        ],
        name: "registerItem",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50604051620017d2380380620017d283398181016040528101906200003791906200035e565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620003a1565b60405180910390fd5b620000be816200023060201b60201c565b5060008190508073ffffffffffffffffffffffffffffffffffffffff1663957047f66040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000136919062000403565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16635ada0c296040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e891906200047a565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620004ac565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032682620002f9565b9050919050565b620003388162000319565b81146200034457600080fd5b50565b60008151905062000358816200032d565b92915050565b600060208284031215620003775762000376620002f4565b5b6000620003878482850162000347565b91505092915050565b6200039b8162000319565b82525050565b6000602082019050620003b8600083018462000390565b92915050565b6000620003cb8262000319565b9050919050565b620003dd81620003be565b8114620003e957600080fd5b50565b600081519050620003fd81620003d2565b92915050565b6000602082840312156200041c576200041b620002f4565b5b60006200042c84828501620003ec565b91505092915050565b6000620004428262000319565b9050919050565b620004548162000435565b81146200046057600080fd5b50565b600081519050620004748162000449565b92915050565b600060208284031215620004935762000492620002f4565b5b6000620004a38482850162000463565b91505092915050565b61131680620004bc6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639e2c37551161005b5780639e2c3755146100c65780639e8595dd146100e2578063b7958936146100fe578063f2fde38b1461012e5761007d565b806306cb7f4c14610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190610ac3565b61014a565b005b6100a661033d565b005b6100b0610351565b6040516100bd9190610b46565b60405180910390f35b6100e060048036038101906100db9190610b61565b61037a565b005b6100fc60048036038101906100f79190610c8a565b6104f7565b005b61011860048036038101906101139190610d79565b6106a0565b6040516101259190610e64565b60405180910390f35b61014860048036038101906101439190610e86565b6107e1565b005b610152610867565b60005b838390508163ffffffff1610156102df578463ffffffff166003600086868563ffffffff1681811061018a57610189610eb3565b5b905060200201602081019061019f9190610d79565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614610210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020790610f3f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c9ede6b85858463ffffffff1681811061026757610266610eb3565b5b905060200201602081019061027c9190610d79565b846040518363ffffffff1660e01b815260040161029a929190610f6e565b600060405180830381600087803b1580156102b457600080fd5b505af11580156102c8573d6000803e3d6000fd5b5050505080806102d790610fc6565b915050610155565b508073ffffffffffffffffffffffffffffffffffffffff168463ffffffff167f5751cced274fa533356560ef0b60c0e74319ab6693096dfbfc3305880e2bef76858560405161032f92919061107d565b60405180910390a350505050565b610345610867565b61034f60006108ee565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610382610867565b8363ffffffff16600360008563ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16146103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690610f3f565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e106fa78484846040518463ffffffff1660e01b815260040161045e939291906110a1565b600060405180830381600087803b15801561047857600080fd5b505af115801561048c573d6000803e3d6000fd5b505050508263ffffffff168173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fec11181c689022a5cc6ccc655e5eb6b941355c9fb21cdcf09582485c23b8dd1060405160405180910390a450505050565b6104ff610867565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638f79678b8b308b8b8b8b8b8b8b6040518a63ffffffff1660e01b815260040161056c999897969594939291906111f3565b6020604051808303816000875af115801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190611284565b905088600360008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550600460008a63ffffffff1663ffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055508863ffffffff168163ffffffff167f5dca466bf79f88c03e958521050136ada30ff662395ae8ee41bfa699f9a0d1bf60405160405180910390a350505050505050505050565b60606000600460008463ffffffff1663ffffffff16815260200190815260200160002080549050905060008163ffffffff1667ffffffffffffffff8111156106eb576106ea6112b1565b5b6040519080825280602002602001820160405280156107195781602001602082028036833780820191505090505b50905060005b8263ffffffff168163ffffffff1610156107d657600460008663ffffffff1663ffffffff1681526020019081526020016000208163ffffffff168154811061076a57610769610eb3565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16828263ffffffff16815181106107a9576107a8610eb3565b5b602002602001019063ffffffff16908163ffffffff168152505080806107ce90610fc6565b91505061071f565b508092505050919050565b6107e9610867565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108529190610b46565b60405180910390fd5b610864816108ee565b50565b61086f6109b2565b73ffffffffffffffffffffffffffffffffffffffff1661088d610351565b73ffffffffffffffffffffffffffffffffffffffff16146108ec576108b06109b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108e39190610b46565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6109dd816109c4565b81146109e857600080fd5b50565b6000813590506109fa816109d4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a2557610a24610a00565b5b8235905067ffffffffffffffff811115610a4257610a41610a05565b5b602083019150836020820283011115610a5e57610a5d610a0a565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9082610a65565b9050919050565b610aa081610a85565b8114610aab57600080fd5b50565b600081359050610abd81610a97565b92915050565b60008060008060608587031215610add57610adc6109ba565b5b6000610aeb878288016109eb565b945050602085013567ffffffffffffffff811115610b0c57610b0b6109bf565b5b610b1887828801610a0f565b93509350506040610b2b87828801610aae565b91505092959194509250565b610b4081610a85565b82525050565b6000602082019050610b5b6000830184610b37565b92915050565b60008060008060808587031215610b7b57610b7a6109ba565b5b6000610b89878288016109eb565b9450506020610b9a878288016109eb565b9350506040610bab87828801610aae565b9250506060610bbc87828801610aae565b91505092959194509250565b6000819050919050565b610bdb81610bc8565b8114610be657600080fd5b50565b600081359050610bf881610bd2565b92915050565b6000819050919050565b610c1181610bfe565b8114610c1c57600080fd5b50565b600081359050610c2e81610c08565b92915050565b60008083601f840112610c4a57610c49610a00565b5b8235905067ffffffffffffffff811115610c6757610c66610a05565b5b602083019150836020820283011115610c8357610c82610a0a565b5b9250929050565b600080600080600080600080600060c08a8c031215610cac57610cab6109ba565b5b6000610cba8c828d01610be9565b9950506020610ccb8c828d016109eb565b98505060408a013567ffffffffffffffff811115610cec57610ceb6109bf565b5b610cf88c828d01610a0f565b97509750506060610d0b8c828d01610c1f565b95505060808a013567ffffffffffffffff811115610d2c57610d2b6109bf565b5b610d388c828d01610a0f565b945094505060a08a013567ffffffffffffffff811115610d5b57610d5a6109bf565b5b610d678c828d01610c34565b92509250509295985092959850929598565b600060208284031215610d8f57610d8e6109ba565b5b6000610d9d848285016109eb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ddb816109c4565b82525050565b6000610ded8383610dd2565b60208301905092915050565b6000602082019050919050565b6000610e1182610da6565b610e1b8185610db1565b9350610e2683610dc2565b8060005b83811015610e57578151610e3e8882610de1565b9750610e4983610df9565b925050600181019050610e2a565b5085935050505092915050565b60006020820190508181036000830152610e7e8184610e06565b905092915050565b600060208284031215610e9c57610e9b6109ba565b5b6000610eaa84828501610aae565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4e6f74206974656d2073656c6c65720000000000000000000000000000000000600082015250565b6000610f29600f83610ee2565b9150610f3482610ef3565b602082019050919050565b60006020820190508181036000830152610f5881610f1c565b9050919050565b610f68816109c4565b82525050565b6000604082019050610f836000830185610f5f565b610f906020830184610b37565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd1826109c4565b915063ffffffff8203610fe757610fe6610f97565b5b600182019050919050565b6000819050919050565b600061100b60208401846109eb565b905092915050565b6000602082019050919050565b600061102c8385610db1565b935061103782610ff2565b8060005b858110156110705761104d8284610ffc565b6110578882610de1565b975061106283611013565b92505060018101905061103b565b5085925050509392505050565b60006020820190508181036000830152611098818486611020565b90509392505050565b60006060820190506110b66000830186610f5f565b6110c36020830185610b37565b6110d06040830184610b37565b949350505050565b6110e181610bc8565b82525050565b6110f081610bfe565b82525050565b600082825260208201905092915050565b6000819050919050565b600061ffff82169050919050565b61112881611111565b82525050565b600061113a838361111f565b60208301905092915050565b61114f81611111565b811461115a57600080fd5b50565b60008135905061116c81611146565b92915050565b6000611181602084018461115d565b905092915050565b6000602082019050919050565b60006111a283856110f6565b93506111ad82611107565b8060005b858110156111e6576111c38284611172565b6111cd888261112e565b97506111d883611189565b9250506001810190506111b1565b5085925050509392505050565b600060c082019050611208600083018c6110d8565b611215602083018b610b37565b818103604083015261122881898b611020565b905061123760608301886110e7565b818103608083015261124a818688611020565b905081810360a083015261125f818486611196565b90509a9950505050505050505050565b60008151905061127e816109d4565b92915050565b60006020828403121561129a576112996109ba565b5b60006112a88482850161126f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212202bd8fddfcf8aebc47cb28362c41d32d6d6c1bec9120c17680393ec583f869b2a64736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class SellerProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(paymentProcessor, overrides) {
        return super.getDeployTransaction(paymentProcessor, overrides || {});
    }
    deploy(paymentProcessor, overrides) {
        return super.deploy(paymentProcessor, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.SellerProxy__factory = SellerProxy__factory;
SellerProxy__factory.bytecode = _bytecode;
SellerProxy__factory.abi = _abi;
//# sourceMappingURL=SellerProxy__factory.js.map