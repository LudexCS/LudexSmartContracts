"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PurchaseProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "storeAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "purchases",
                type: "uint256[]",
            },
        ],
        name: "PurchaseIDsClaimed",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "ownerID",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "claimer",
                type: "address",
            },
            {
                internalType: "uint256[]",
                name: "purchaseIDs",
                type: "uint256[]",
            },
        ],
        name: "claimPurchaseIDs",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "purchaseID",
                type: "uint256",
            },
        ],
        name: "getPurchaseInfo",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "tokenID",
                        type: "uint256",
                    },
                    {
                        internalType: "uint32",
                        name: "itemID",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "buyer",
                        type: "uint32",
                    },
                    {
                        internalType: "uint256",
                        name: "timestamp",
                        type: "uint256",
                    },
                ],
                internalType: "struct PurchaseProxy.PurchaseInfo",
                name: "purchase",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "owner",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "itemID",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "ownerID",
                type: "uint32",
            },
        ],
        name: "purchaseItem",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50604051620012a8380380620012a8833981810160405281019062000037919062000309565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200034c565b60405180910390fd5b620000be81620001db60201b60201c565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356397c356040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200016e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001949190620003ae565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003e0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002d182620002a4565b9050919050565b620002e381620002c4565b8114620002ef57600080fd5b50565b6000815190506200030381620002d8565b92915050565b6000602082840312156200032257620003216200029f565b5b60006200033284828501620002f2565b91505092915050565b6200034681620002c4565b82525050565b60006020820190506200036360008301846200033b565b92915050565b60006200037682620002c4565b9050919050565b620003888162000369565b81146200039457600080fd5b50565b600081519050620003a8816200037d565b92915050565b600060208284031215620003c757620003c66200029f565b5b6000620003d78482850162000397565b91505092915050565b610eb880620003f06000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806393bb04341161005b57806393bb0434146100da578063a123c33e146100f6578063a7e5001414610126578063f2fde38b146101425761007d565b80635887504914610082578063715018a6146100b25780638da5cb5b146100bc575b600080fd5b61009c60048036038101906100979190610811565b61015e565b6040516100a991906108c1565b60405180910390f35b6100ba610264565b005b6100c4610278565b6040516100d1919061091d565b60405180910390f35b6100f460048036038101906100ef91906109f5565b6102a1565b005b610110600480360381019061010b9190610811565b6104bd565b60405161011d9190610a78565b60405180910390f35b610140600480360381019061013b9190610a93565b6104e0565b005b61015c60048036038101906101579190610ae6565b6105c4565b005b61016661079d565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638392fe31856040518263ffffffff1660e01b81526004016101c49190610b22565b608060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610b7c565b93505092505060405180608001604052808581526020018363ffffffff1681526020016001600087815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1681526020018281525092505050919050565b61026c61064a565b61027660006106d1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102a961064a565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f90610c40565b60405180910390fd5b60005b828290508163ffffffff16101561046657600083838363ffffffff1681811061034757610346610c60565b5b9050602002013590508563ffffffff166001600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610cdb565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3087846040518463ffffffff1660e01b815260040161042093929190610cfb565b600060405180830381600087803b15801561043a57600080fd5b505af115801561044e573d6000803e3d6000fd5b5050505050808061045e90610d61565b91505061031b565b508273ffffffffffffffffffffffffffffffffffffffff167fef15881179840a70ad945bad81e677cc59e030cb404f81a92bc3ac6fd4f4a57583836040516104af929190610e08565b60405180910390a250505050565b60016020528060005260406000206000915054906101000a900463ffffffff1681565b6104e861064a565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a19363ac84866040518363ffffffff1660e01b8152600401610547929190610e2c565b6020604051808303816000875af1158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190610e55565b9050816001600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555050505050565b6105cc61064a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361063e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610635919061091d565b60405180910390fd5b610647816106d1565b50565b610652610795565b73ffffffffffffffffffffffffffffffffffffffff16610670610278565b73ffffffffffffffffffffffffffffffffffffffff16146106cf57610693610795565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106c6919061091d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806080016040528060008152602001600063ffffffff168152602001600063ffffffff168152602001600081525090565b600080fd5b600080fd5b6000819050919050565b6107ee816107db565b81146107f957600080fd5b50565b60008135905061080b816107e5565b92915050565b600060208284031215610827576108266107d1565b5b6000610835848285016107fc565b91505092915050565b610847816107db565b82525050565b600063ffffffff82169050919050565b6108668161084d565b82525050565b608082016000820151610882600085018261083e565b506020820151610895602085018261085d565b5060408201516108a8604085018261085d565b5060608201516108bb606085018261083e565b50505050565b60006080820190506108d6600083018461086c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610907826108dc565b9050919050565b610917816108fc565b82525050565b6000602082019050610932600083018461090e565b92915050565b6109418161084d565b811461094c57600080fd5b50565b60008135905061095e81610938565b92915050565b61096d816108fc565b811461097857600080fd5b50565b60008135905061098a81610964565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109b5576109b4610990565b5b8235905067ffffffffffffffff8111156109d2576109d1610995565b5b6020830191508360208202830111156109ee576109ed61099a565b5b9250929050565b60008060008060608587031215610a0f57610a0e6107d1565b5b6000610a1d8782880161094f565b9450506020610a2e8782880161097b565b935050604085013567ffffffffffffffff811115610a4f57610a4e6107d6565b5b610a5b8782880161099f565b925092505092959194509250565b610a728161084d565b82525050565b6000602082019050610a8d6000830184610a69565b92915050565b600080600060608486031215610aac57610aab6107d1565b5b6000610aba8682870161097b565b9350506020610acb8682870161094f565b9250506040610adc8682870161094f565b9150509250925092565b600060208284031215610afc57610afb6107d1565b5b6000610b0a8482850161097b565b91505092915050565b610b1c816107db565b82525050565b6000602082019050610b376000830184610b13565b92915050565b600081519050610b4c816107e5565b92915050565b600081519050610b6181610938565b92915050565b600081519050610b7681610964565b92915050565b60008060008060808587031215610b9657610b956107d1565b5b6000610ba487828801610b3d565b9450506020610bb587828801610b52565b9350506040610bc687828801610b67565b9250506060610bd787828801610b3d565b91505092959194509250565b600082825260208201905092915050565b7f4e6f7420612076616c696420636c61696d657220616464726573730000000000600082015250565b6000610c2a601b83610be3565b9150610c3582610bf4565b602082019050919050565b60006020820190508181036000830152610c5981610c1d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f74206974656d206f776e6572000000000000000000000000000000000000600082015250565b6000610cc5600e83610be3565b9150610cd082610c8f565b602082019050919050565b60006020820190508181036000830152610cf481610cb8565b9050919050565b6000606082019050610d10600083018661090e565b610d1d602083018561090e565b610d2a6040830184610b13565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6c8261084d565b915063ffffffff8203610d8257610d81610d32565b5b600182019050919050565b600082825260208201905092915050565b600080fd5b82818337505050565b6000610db88385610d8d565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610deb57610dea610d9e565b5b602083029250610dfc838584610da3565b82840190509392505050565b60006020820190508181036000830152610e23818486610dac565b90509392505050565b6000604082019050610e416000830185610a69565b610e4e602083018461090e565b9392505050565b600060208284031215610e6b57610e6a6107d1565b5b6000610e7984828501610b3d565b9150509291505056fea26469706673582212202734cc952e61654c5ffda9b11e80fc803ad7a7eb292b9c9ffdb7635a2f96d4d964736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class PurchaseProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(storeAddress, overrides) {
        return super.getDeployTransaction(storeAddress, overrides || {});
    }
    deploy(storeAddress, overrides) {
        return super.deploy(storeAddress, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.PurchaseProxy__factory = PurchaseProxy__factory;
PurchaseProxy__factory.bytecode = _bytecode;
PurchaseProxy__factory.abi = _abi;
//# sourceMappingURL=PurchaseProxy__factory.js.map