"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PurchaseProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "storeAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "purchases",
                type: "uint256[]",
            },
        ],
        name: "PurchaseIDsClaimed",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "ownerID",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "claimer",
                type: "address",
            },
            {
                internalType: "uint256[]",
                name: "purchaseIDs",
                type: "uint256[]",
            },
        ],
        name: "claimPurchaseIDs",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "purchaseID",
                type: "uint256",
            },
        ],
        name: "getPurchaseInfo",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "tokenID",
                        type: "uint256",
                    },
                    {
                        internalType: "uint32",
                        name: "itemID",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "buyer",
                        type: "uint32",
                    },
                    {
                        internalType: "uint256",
                        name: "timestamp",
                        type: "uint256",
                    },
                ],
                internalType: "struct PurchaseProxy.PurchaseInfo",
                name: "purchase",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "owner",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "itemID",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "ownerID",
                type: "uint32",
            },
        ],
        name: "purchaseItem",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50604051620016a5380380620016a5833981810160405281019062000037919062000309565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200034c565b60405180910390fd5b620000be81620001db60201b60201c565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356397c356040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200016e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001949190620003ae565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003e0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002d182620002a4565b9050919050565b620002e381620002c4565b8114620002ef57600080fd5b50565b6000815190506200030381620002d8565b92915050565b6000602082840312156200032257620003216200029f565b5b60006200033284828501620002f2565b91505092915050565b6200034681620002c4565b82525050565b60006020820190506200036360008301846200033b565b92915050565b60006200037682620002c4565b9050919050565b620003888162000369565b81146200039457600080fd5b50565b600081519050620003a8816200037d565b92915050565b600060208284031215620003c757620003c66200029f565b5b6000620003d78482850162000397565b91505092915050565b6112b580620003f06000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806393bb04341161005b57806393bb0434146100da578063a123c33e146100f6578063a7e5001414610126578063f2fde38b146101425761007d565b80635887504914610082578063715018a6146100b25780638da5cb5b146100bc575b600080fd5b61009c60048036038101906100979190610a8c565b61015e565b6040516100a99190610b3c565b60405180910390f35b6100ba610264565b005b6100c4610278565b6040516100d19190610b98565b60405180910390f35b6100f460048036038101906100ef9190610c70565b6102a1565b005b610110600480360381019061010b9190610a8c565b6104bd565b60405161011d9190610cf3565b60405180910390f35b610140600480360381019061013b9190610d0e565b6104e0565b005b61015c60048036038101906101579190610d61565b61083f565b005b610166610a18565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638392fe31856040518263ffffffff1660e01b81526004016101c49190610d9d565b608060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610df7565b93505092505060405180608001604052808581526020018363ffffffff1681526020016001600087815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1681526020018281525092505050919050565b61026c6108c5565b610276600061094c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102a96108c5565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f90610ebb565b60405180910390fd5b60005b828290508163ffffffff16101561046657600083838363ffffffff1681811061034757610346610edb565b5b9050602002013590508563ffffffff166001600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610f56565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3087846040518463ffffffff1660e01b815260040161042093929190610f76565b600060405180830381600087803b15801561043a57600080fd5b505af115801561044e573d6000803e3d6000fd5b5050505050808061045e90610fdc565b91505061031b565b508273ffffffffffffffffffffffffffffffffffffffff167fef15881179840a70ad945bad81e677cc59e030cb404f81a92bc3ac6fd4f4a57583836040516104af929190611083565b60405180910390a250505050565b60016020528060005260406000206000915054906101000a900463ffffffff1681565b6104e86108c5565b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342f6487a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906110e5565b6040518363ffffffff1660e01b81526004016105ba929190611112565b602060405180830381865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb919061113b565b905060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61062a9190611197565b811015610761578173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342f6487a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de91906110e5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161071c9291906111c8565b6020604051808303816000875af115801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190611229565b505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b54dc9de86886040518363ffffffff1660e01b81526004016107c0929190611256565b6020604051808303816000875af11580156107df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610803919061113b565b9050836001600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b6108476108c5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108b95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108b09190610b98565b60405180910390fd5b6108c28161094c565b50565b6108cd610a10565b73ffffffffffffffffffffffffffffffffffffffff166108eb610278565b73ffffffffffffffffffffffffffffffffffffffff161461094a5761090e610a10565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109419190610b98565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806080016040528060008152602001600063ffffffff168152602001600063ffffffff168152602001600081525090565b600080fd5b600080fd5b6000819050919050565b610a6981610a56565b8114610a7457600080fd5b50565b600081359050610a8681610a60565b92915050565b600060208284031215610aa257610aa1610a4c565b5b6000610ab084828501610a77565b91505092915050565b610ac281610a56565b82525050565b600063ffffffff82169050919050565b610ae181610ac8565b82525050565b608082016000820151610afd6000850182610ab9565b506020820151610b106020850182610ad8565b506040820151610b236040850182610ad8565b506060820151610b366060850182610ab9565b50505050565b6000608082019050610b516000830184610ae7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8282610b57565b9050919050565b610b9281610b77565b82525050565b6000602082019050610bad6000830184610b89565b92915050565b610bbc81610ac8565b8114610bc757600080fd5b50565b600081359050610bd981610bb3565b92915050565b610be881610b77565b8114610bf357600080fd5b50565b600081359050610c0581610bdf565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c3057610c2f610c0b565b5b8235905067ffffffffffffffff811115610c4d57610c4c610c10565b5b602083019150836020820283011115610c6957610c68610c15565b5b9250929050565b60008060008060608587031215610c8a57610c89610a4c565b5b6000610c9887828801610bca565b9450506020610ca987828801610bf6565b935050604085013567ffffffffffffffff811115610cca57610cc9610a51565b5b610cd687828801610c1a565b925092505092959194509250565b610ced81610ac8565b82525050565b6000602082019050610d086000830184610ce4565b92915050565b600080600060608486031215610d2757610d26610a4c565b5b6000610d3586828701610bf6565b9350506020610d4686828701610bca565b9250506040610d5786828701610bca565b9150509250925092565b600060208284031215610d7757610d76610a4c565b5b6000610d8584828501610bf6565b91505092915050565b610d9781610a56565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b600081519050610dc781610a60565b92915050565b600081519050610ddc81610bb3565b92915050565b600081519050610df181610bdf565b92915050565b60008060008060808587031215610e1157610e10610a4c565b5b6000610e1f87828801610db8565b9450506020610e3087828801610dcd565b9350506040610e4187828801610de2565b9250506060610e5287828801610db8565b91505092959194509250565b600082825260208201905092915050565b7f4e6f7420612076616c696420636c61696d657220616464726573730000000000600082015250565b6000610ea5601b83610e5e565b9150610eb082610e6f565b602082019050919050565b60006020820190508181036000830152610ed481610e98565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f74206974656d206f776e6572000000000000000000000000000000000000600082015250565b6000610f40600e83610e5e565b9150610f4b82610f0a565b602082019050919050565b60006020820190508181036000830152610f6f81610f33565b9050919050565b6000606082019050610f8b6000830186610b89565b610f986020830185610b89565b610fa56040830184610d8e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fe782610ac8565b915063ffffffff8203610ffd57610ffc610fad565b5b600182019050919050565b600082825260208201905092915050565b600080fd5b82818337505050565b60006110338385611008565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561106657611065611019565b5b60208302925061107783858461101e565b82840190509392505050565b6000602082019050818103600083015261109e818486611027565b90509392505050565b60006110b282610b77565b9050919050565b6110c2816110a7565b81146110cd57600080fd5b50565b6000815190506110df816110b9565b92915050565b6000602082840312156110fb576110fa610a4c565b5b6000611109848285016110d0565b91505092915050565b60006040820190506111276000830185610b89565b6111346020830184610b89565b9392505050565b60006020828403121561115157611150610a4c565b5b600061115f84828501610db8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111a282610a56565b91506111ad83610a56565b9250826111bd576111bc611168565b5b828204905092915050565b60006040820190506111dd6000830185610b89565b6111ea6020830184610d8e565b9392505050565b60008115159050919050565b611206816111f1565b811461121157600080fd5b50565b600081519050611223816111fd565b92915050565b60006020828403121561123f5761123e610a4c565b5b600061124d84828501611214565b91505092915050565b600060408201905061126b6000830185610ce4565b6112786020830184610b89565b939250505056fea26469706673582212203fc87dd16436e20083ea7f742ae244096dd8c2e9f24583f2e49db2b3a2b15a4364736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class PurchaseProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(storeAddress, overrides) {
        return super.getDeployTransaction(storeAddress, overrides || {});
    }
    deploy(storeAddress, overrides) {
        return super.deploy(storeAddress, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.PurchaseProxy__factory = PurchaseProxy__factory;
PurchaseProxy__factory.bytecode = _bytecode;
PurchaseProxy__factory.abi = _abi;
//# sourceMappingURL=PurchaseProxy__factory.js.map