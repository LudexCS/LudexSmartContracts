import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ItemRegistry, ItemRegistryInterface } from "../../contracts/ItemRegistry";
type ItemRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ItemRegistry__factory extends ContractFactory {
    constructor(...args: ItemRegistryConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ItemRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ItemRegistry__factory;
    static readonly bytecode = "0x6080604052346200002d57620000146200003e565b6200001e62000033565b612b01620002618239612b0190f35b62000039565b60405190565b600080fd5b6200004933620000c1565b565b90565b60018060a01b031690565b90565b620000756200006f6200007b926200004b565b62000059565b6200004e565b90565b62000089906200005c565b90565b62000097906200004e565b90565b620000a5906200008c565b9052565b9190620000bf906000602085019401906200009a565b565b80620000e3620000dc620000d660006200007e565b6200008c565b916200008c565b14620000f657620000f490620001f3565b565b620001276200010660006200007e565b6200011062000033565b918291631e4fbdf760e01b835260048301620000a9565b0390fd5b60001c90565b60018060a01b031690565b6200014b62000151916200012b565b62000131565b90565b6200016090546200013c565b90565b60001b90565b906200017c60018060a01b039162000163565b9181191691161790565b6200019f62000199620001a5926200004e565b62000059565b6200004e565b90565b620001b39062000186565b90565b620001c190620001a8565b90565b90565b90620001e1620001db620001e992620001b6565b620001c4565b825462000169565b9055565b60000190565b620001ff600062000154565b6200020c826000620001c7565b90620002446200023d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093620001b6565b91620001b6565b916200024f62000033565b806200025b81620001ed565b0390a356fe60806040526004361015610013575b610d2a565b61001e60003561014d565b806301b8fc75146101485780632c9ede6b1461014357806358416bee1461013e57806361e400161461013957806368797c4c14610134578063715018a61461012f578063794707db1461012a5780638da5cb5b146101255780638f79678b146101205780639479df9c1461011b5780639884c1c814610116578063b1fb095714610111578063bdafe05d1461010c578063c0a68a0414610107578063cef3c69814610102578063e8bb0cb0146100fd578063eebd35e6146100f8578063f2fde38b146100f35763fdc615400361000e57610cf4565b610c8b565b610c56565b610c09565b610bd6565b610ba0565b610b1b565b610ae8565b610ab3565b610a00565b61095d565b6107ac565b610753565b6105d7565b610592565b6104d5565b6103f5565b6102f9565b61026c565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b60018060a01b031690565b61017c90610168565b90565b61018881610173565b0361018f57565b600080fd5b905035906101a18261017f565b565b906020828203126101bd576101ba91600001610194565b90565b61015e565b5190565b60209181520190565b60200190565b63ffffffff1690565b6101e7906101d5565b9052565b906101f8816020936101de565b0190565b60200190565b9061021f610219610212846101c2565b80936101c6565b926101cf565b9060005b8181106102305750505090565b90919261024961024360019286516101eb565b946101fc565b9101919091610223565b6102699160208201916000818403910152610202565b90565b3461029c576102986102876102823660046101a3565b6111de565b61028f610153565b91829182610253565b0390f35b610159565b6102aa816101d5565b036102b157565b600080fd5b905035906102c3826102a1565b565b91906040838203126102ee57806102e26102eb92600086016102b6565b93602001610194565b90565b61015e565b60000190565b346103285761031261030c3660046102c5565b90612954565b61031a610153565b80610324816102f3565b0390f35b610159565b9060208282031261034757610344916000016102b6565b90565b61015e565b90565b61036361035e610368926101d5565b61034c565b6101d5565b90565b906103759061034f565b600052602052604060002090565b1c90565b60ff1690565b61039d9060086103a29302610383565b610387565b90565b906103b0915461038d565b90565b6103ca906103c560089160009261036b565b6103a5565b90565b151590565b6103db906103cd565b9052565b91906103f3906000602085019401906103d2565b565b346104255761042161041061040b36600461032d565b6103b3565b610418610153565b918291826103df565b0390f35b610159565b600080fd5b600080fd5b600080fd5b909182601f830112156104735781359167ffffffffffffffff831161046e57602001926001830284011161046957565b610434565b61042f565b61042a565b906020828203126104aa57600082013567ffffffffffffffff81116104a5576104a19201610439565b9091565b610163565b61015e565b90565b6104bb906104af565b9052565b91906104d3906000602085019401906104b2565b565b34610506576105026104f16104eb366004610478565b90611410565b6104f9610153565b918291826104bf565b0390f35b610159565b906105159061034f565b600052602052604060002090565b60ff1690565b61053990600861053e9302610383565b610523565b90565b9061054c9154610529565b90565b6105669061056160049160009261050b565b610541565b90565b60ff1690565b61057890610569565b9052565b91906105909060006020850194019061056f565b565b346105c2576105be6105ad6105a836600461032d565b61054f565b6105b5610153565b9182918261057c565b0390f35b610159565b60009103126105d257565b61015e565b34610605576105e73660046105c7565b6105ef610dc2565b6105f7610153565b80610601816102f3565b0390f35b610159565b90565b6106168161060a565b0361061d57565b600080fd5b9050359061062f8261060d565b565b919060408382031261065a578061064e61065792600086016102b6565b93602001610622565b90565b61015e565b906106699061034f565b600052602052604060002090565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b9190916106a88161068d565b8310156106c65760086106bc600492610691565b8185040193060290565b610677565b63ffffffff1690565b6106e49060086106e99302610383565b6106cb565b90565b906106f791546106d4565b90565b61070590600561065f565b61070e8161068d565b82101561072b57610728916107229161069c565b906106ec565b90565b600080fd5b610739906101d5565b9052565b919061075190600060208501940190610730565b565b346107845761078061076f610769366004610631565b906106fa565b610777610153565b9182918261073d565b0390f35b610159565b61079290610173565b9052565b91906107aa90600060208501940190610789565b565b346107dc576107bc3660046105c7565b6107d86107c7610d5b565b6107cf610153565b91829182610796565b0390f35b610159565b6107ea816104af565b036107f157565b600080fd5b90503590610803826107e1565b565b909182601f8301121561083f5781359167ffffffffffffffff831161083a57602001926020830284011161083557565b610434565b61042f565b61042a565b909182601f8301121561087e5781359167ffffffffffffffff831161087957602001926020830284011161087457565b610434565b61042f565b61042a565b91909160c0818403126109315761089d83600083016107f6565b926108ab8160208401610194565b92604083013567ffffffffffffffff811161092c57826108cc918501610805565b9290936108dc8260608301610622565b92608082013567ffffffffffffffff811161092757836108fd918401610805565b92909360a082013567ffffffffffffffff81116109225761091e9201610844565b9091565b610163565b610163565b610163565b61015e565b9161095a9261094d60408201936000830190610730565b6020818403910152610202565b90565b346109985761097f610970366004610883565b979690969591959492946120ea565b9061099461098b610153565b92839283610936565b0390f35b610159565b906109a79061034f565b600052602052604060002090565b60018060a01b031690565b6109d09060086109d59302610383565b6109b5565b90565b906109e391546109c0565b90565b6109fd906109f860019160009261099d565b6109d8565b90565b34610a3057610a2c610a1b610a1636600461032d565b6109e6565b610a23610153565b91829182610796565b0390f35b610159565b90610a3f9061034f565b600052602052604060002090565b90565b610a60906008610a659302610383565b610a4d565b90565b90610a739154610a50565b90565b610a8d90610a88600691600092610a35565b610a68565b90565b610a999061060a565b9052565b9190610ab190600060208501940190610a90565b565b34610ae357610adf610ace610ac936600461032d565b610a76565b610ad6610153565b91829182610a9d565b0390f35b610159565b34610b1657610b00610afb3660046101a3565b61101a565b610b08610153565b80610b12816102f3565b0390f35b610159565b34610b4957610b33610b2e3660046101a3565b610fef565b610b3b610153565b80610b45816102f3565b0390f35b610159565b610b5781610569565b03610b5e57565b600080fd5b90503590610b7082610b4e565b565b9190604083820312610b9b5780610b8f610b9892600086016102b6565b93602001610b63565b90565b61015e565b34610bd157610bcd610bbc610bb6366004610b72565b9061139e565b610bc4610153565b9182918261073d565b0390f35b610159565b34610c0457610bee610be936600461032d565b6126d7565b610bf6610153565b80610c00816102f3565b0390f35b610159565b34610c3757610c21610c1c36600461032d565b61253b565b610c29610153565b80610c33816102f3565b0390f35b610159565b610c5390610c4e60079160009261036b565b6103a5565b90565b34610c8657610c82610c71610c6c36600461032d565b610c3c565b610c79610153565b918291826103df565b0390f35b610159565b34610cb957610ca3610c9e3660046101a3565b610e8f565b610cab610153565b80610cb5816102f3565b0390f35b610159565b610cc990600361065f565b610cd28161068d565b821015610cef57610cec91610ce69161069c565b906106ec565b90565b600080fd5b34610d2557610d21610d10610d0a366004610631565b90610cbe565b610d18610153565b9182918261073d565b0390f35b610159565b600080fd5b600090565b60001c90565b610d46610d4b91610d34565b6109b5565b90565b610d589054610d3a565b90565b610d63610d2f565b50610d6e6000610d4e565b90565b610d79610dcc565b610d81610dae565b565b90565b610d9a610d95610d9f92610d83565b61034c565b610168565b90565b610dab90610d86565b90565b610dc0610dbb6000610da2565b610f12565b565b610dca610d71565b565b610dd4610d5b565b610ded610de7610de2610f73565b610173565b91610173565b03610df457565b610e1d610dff610f73565b610e07610153565b91829163118cdaa760e01b835260048301610796565b0390fd5b610e3290610e2d610dcc565b610e34565b565b80610e50610e4a610e456000610da2565b610173565b91610173565b14610e6057610e5e90610f12565b565b610e8b610e6d6000610da2565b610e75610153565b918291631e4fbdf760e01b835260048301610796565b0390fd5b610e9890610e21565b565b60001b90565b90610eb160018060a01b0391610e9a565b9181191691161790565b610ecf610eca610ed492610168565b61034c565b610168565b90565b610ee090610ebb565b90565b610eec90610ed7565b90565b90565b90610f07610f02610f0e92610ee3565b610eef565b8254610ea0565b9055565b610f1c6000610d4e565b610f27826000610ef2565b90610f5b610f557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610ee3565b91610ee3565b91610f64610153565b80610f6e816102f3565b0390a3565b610f7b610d2f565b503390565b610f9190610f8c610dcc565b610fda565b565b610f9c90610ebb565b90565b610fa890610f93565b90565b610fb490610f93565b90565b90565b90610fcf610fca610fd692610fab565b610fb7565b8254610ea0565b9055565b610fe6610fed91610f9f565b600b610fba565b565b610ff890610f80565b565b61100b90611006610dcc565b61100d565b565b61101890600c610ef2565b565b61102390610ffa565b565b606090565b9061103490610ee3565b600052602052604060002090565b61105661105161105b9261060a565b61034c565b6101d5565b90565b61107261106d61107792610d83565b61034c565b6101d5565b90565b634e487b7160e01b600052601160045260246000fd5b611099906101d5565b63ffffffff81146110aa5760010190565b61107a565b6110bb6110c1916101d5565b916101d5565b90039063ffffffff82116110d157565b61107a565b6110ea6110e56110ef926101d5565b61034c565b61060a565b90565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061111c906110f2565b810190811067ffffffffffffffff82111761113657604052565b6110fc565b9061114e611147610153565b9283611112565b565b67ffffffffffffffff81116111685760208091020190565b6110fc565b9061117f61117a83611150565b61113b565b918252565b369037565b906111ae6111968361116d565b926020806111a48693611150565b9201910390611184565b565b906111ba826101c2565b8110156111cb576020809102010190565b610677565b906111da906101d5565b9052565b6111e6611025565b506112036111fe6111f96002849061102a565b61068d565b611042565b9061120e600061105e565b90611219600061105e565b5b8061122d611227866101d5565b916101d5565b101561129f5761126461125f61125861125261124b6002879061102a565b859061069c565b906106ec565b600161099d565b610d4e565b61127661127084610173565b91610173565b0361128a575b61128590611090565b61121a565b9161129761128591611090565b92905061127c565b50906112b66112b16112bb92856110af565b6110d6565b611189565b906112c6600061105e565b906112d1600061105e565b915b826112e66112e0876101d5565b916101d5565b10156113915761131d61131861131161130b6113046002879061102a565b879061069c565b906106ec565b600161099d565b610d4e565b61132f61132984610173565b91610173565b036113875761137a6113819161137561135d6113576113506002889061102a565b889061069c565b906106ec565b6113708861136a856110d6565b906111b0565b6111d0565b611090565b925b611090565b916112d3565b916113819061137c565b505050905090565b600090565b6113c4916113b96113be926113b1611399565b50600361065f565b61069c565b906106ec565b90565b600090565b905090565b90826000939282370152565b9091826113ed816113f4936113cc565b80936113d1565b0190565b9091611403926113dd565b90565b60200190565b5190565b6114439061141c6113c7565b50611434611428610153565b938492602084016113f8565b60208201810382520382611112565b61145561144f8261140c565b91611406565b2090565b60209181520190565b60007f4e6f74206120726567697374726174696f6e2068616e646c6572000000000000910152565b611497601a602092611459565b6114a081611462565b0190565b6114ba906020810190600081830391015261148a565b90565b156114c457565b6114cc610153565b62461bcd60e51b8152806114e2600482016114a4565b0390fd5b906115249a9998979695949392913361150e611508611503610d5b565b610173565b91610173565b148015611528575b61151f906114bd565b611bf9565b9091565b50611533600c610d4e565b61154e6115486115436000610da2565b610173565b91610173565b14158061155b575b611516565b5061151f3361157b611575611570600c610d4e565b610173565b91610173565b149050611556565b9160206115a592949361159e604082019660008301906104b2565b0190610789565b565b906115b360ff91610e9a565b9181191691161790565b6115c6906103cd565b90565b90565b906115e16115dc6115e8926115bd565b6115c9565b82546115a7565b9055565b90565b600052602060002090565b5490565b91909161160a816115fa565b83101561162857600861161e6004926115ef565b8185040193060290565b610677565b1b90565b9190600861164f91029161164963ffffffff8461162d565b9261162d565b9181191691161790565b90565b919061167261166d61167a9361034f565b611659565b908354611631565b9055565b90815491680100000000000000008310156116ae57826116a69160016116ac950181556115fe565b9061165c565b565b6110fc565b60089060018203010490565b919060086116db9102916116d56000198461162d565b9261162d565b9181191691161790565b6116f96116f46116fe9261060a565b61034c565b61060a565b90565b90565b919061171a611715611722936116e5565b611701565b9083546116bf565b9055565b600090565b61173d91611737611726565b91611704565b565b5b81811061174b575050565b80611759600060019361172b565b01611740565b906117739060001990602003600802610383565b8154169055565b91909182821061178a575b505050565b6004600861179a6117c3956116b3565b6117ac6117a6866116b3565b94610691565b9384019301930602600081116117cb575b5061173f565b388080611785565b6117d8906001830361175f565b386117bd565b9068010000000000000000811161180757816117fc6118059361068d565b9082815561177a565b565b6110fc565b5090565b3561181a816102a1565b90565b90565b9161182b908261180c565b9067ffffffffffffffff8211611915576118516118579161184c84866117de565b61181d565b92610691565b600882049160005b8381106118cb57506008830290036000811161187c575b50505050565b9260009360005b81811061189857505050015538808080611876565b90919460206118bf6001926118b46118af8a611810565b611659565b908560040290611631565b96019101919091611883565b6000805b600881106118e6575090600191818501550161185f565b9590602061190c6001926119016118fc86611810565b611659565b908a60040290611631565b920196016118cf565b6110fc565b906119259291611820565b565b61ffff1690565b61194261193d61194792610d83565b61034c565b611927565b90565b61195390611927565b61ffff81146119625760010190565b61107a565b61197b61197661198092611927565b61034c565b61060a565b90565b9190811015611993576020020190565b610677565b906119a560001991610e9a565b9181191691161790565b906119c46119bf6119cb926116e5565b611701565b8254611998565b9055565b6119e36119de6119e89261060a565b61034c565b610569565b90565b6119ff6119fa611a0492610569565b61034c565b610569565b90565b90565b90611a1f611a1a611a26926119eb565b611a07565b82546115a7565b9055565b60018060a01b031690565b611a41611a4691610d34565b611a2a565b90565b611a539054611a35565b90565b611a5f90610ed7565b90565b60e01b90565b611a71816103cd565b03611a7857565b600080fd5b90505190611a8a82611a68565b565b90602082820312611aa657611aa391600001611a7d565b90565b61015e565b611ab49061192e565b9052565b604090611ae2611ae99496959396611ad860608401986000850190610730565b6020830190610a90565b0190611aab565b565b611af3610153565b3d6000823e3d90fd5b634e487b7160e01b600052600160045260246000fd5b15611b1957565b611afc565b916020611b40929493611b3960408201966000830190610730565b0190610730565b565b9190811015611b52576020020190565b610677565b611b6081611927565b03611b6757565b600080fd5b35611b7681611b57565b90565b611b82906110d6565b9052565b611b8f90611927565b9052565b604090611bbd611bc49496959396611bb360608401986000850190610730565b6020830190611b79565b0190611b86565b565b611bcf906104af565b90565b91611bf692611be960408201936000830190610a90565b6020818403910152610202565b90565b9a999592969a989398979194975050611c3c84611c378891611c28611c1c610153565b93849260208401611583565b60208201810382520382611112565b612a35565b99611c5187611c4c8d600161099d565b610ef2565b611c666001611c618d600761036b565b6115cc565b611c84611c7d611c7860028a9061102a565b6115ec565b8c9061167e565b611c9a8b8a611c958b92600361065f565b61191a565b611ca4600061192e565b5b80611cc2611cbc611cb78d8d9061180c565b61060a565b91611967565b1015611d1157611d0c90611d078d611d02611cfd8e611cf78f611cf29060059390611cec8a611967565b91611983565b611810565b9061065f565b6115ec565b61167e565b61194a565b611ca5565b509091939599929498611d2f42611d2a60068790610a35565b6119af565b611d56611d45611d408b8b9061180c565b6119cf565b611d516004879061050b565b611a0a565b611d68611d63600b611a49565b611a56565b602063b7119066918690611d9160008a95611d9c82611d85610153565b98899788968795611a62565b855260048501611ab8565b03925af180156120e557611dc1916000916120b7575b509b9492959b97939197611b12565b611dd4611dcf86839061180c565b611189565b94611ddf600061192e565b975b88611dfe611df8611df385879061180c565b61060a565b91611967565b101561204f5781838a611e1090611967565b90611e1a92611983565b611e2390611810565b8490611e2d610153565b9182916020830191611e3e92611b1e565b602082018103825203611e519082611112565b611e5a90612a35565b9c8d8790600190611e6a9161099d565b90611e7491610ef2565b8d600190600790611e849161036b565b90611e8e916115cc565b8d600288611e9b9161102a565b611ea4906115ec565b90611eae9161167e565b8d8c908c90600390611ebf9161065f565b91611ec99261191a565b8a8c6000611ed69061192e565b91611eee611ee9611ef4925b859461180c565b61060a565b91611967565b1015611f5f57908c8f611eee611ee98f9b9a9998979695611f5290611f4d611ef4958f611f43611f4891611f3d611f386005928d90611f328a611967565b91611983565b611810565b9061065f565b6115ec565b61167e565b61194a565b9495969798999a9b611ee2565b509193959c98889193959960208e611f7f611f7a600b611a49565b611a56565b611fc3600063b7119066611fce611faf611faa899763ffffffff9c90611fa48d611967565b91611b42565b611b6c565b611fb7610153565b9a8b9788968795611a62565b855260048501611b93565b03925af190811561204a57611ff261200a9261200f9560009161201c575b50611b12565b6120058a611fff85611967565b906111b0565b6111d0565b61194a565b9793919b9492909b611de1565b61203d915060203d8111612043575b6120358183611112565b810190611a8c565b38611fec565b503d61202b565b611aeb565b99505050989450925093509450918591928561209d6120976120917fc4fded964a59e6b74a095216478c71b95d15793121f048793487bf7b5c71f0ba94611bc6565b94610ee3565b9461034f565b946120b26120a9610153565b92839283611bd2565b0390a4565b6120d8915060203d81116120de575b6120d08183611112565b810190611a8c565b38611db2565b503d6120c6565b611aeb565b9061210c98979695949392916120fe611399565b612106611025565b906114e6565b9091565b6121219061211c610dcc565b6124a5565b565b61212f61213491610d34565b610a4d565b90565b6121419054612123565b90565b61214d9061060a565b600019811461215c5760010190565b61107a565b9061216b906116e5565b600052602052604060002090565b61218561218a91610d34565b6106cb565b90565b60201c90565b61219f6121a49161218d565b6106cb565b90565b60401c90565b6121b96121be916121a7565b6106cb565b90565b60601c90565b6121d36121d8916121c1565b6106cb565b90565b60801c90565b6121ed6121f2916121db565b6106cb565b90565b60a01c90565b61220761220c916121f5565b6106cb565b90565b60c01c90565b6122216122269161220f565b6106cb565b90565b61223561223a9161014d565b6106cb565b90565b9060019061225d612257612250856115fa565b80936101c6565b936115ef565b6000926123c8575b6001612272575b50505090565b54908083106123a6575b808310612384575b808310612362575b808310612340575b80831061231e575b8083106122fc575b8083106122da575b82106122b9575b8061226c565b826122d1600193946122cc602094612229565b6101de565b019101386122b3565b91926020816122f36001936122ee86612215565b6101de565b019301916122ac565b9192602081612315600193612310866121fb565b6101de565b019301916122a4565b9192602081612337600193612332866121e1565b6101de565b0193019161229c565b9192602081612359600193612354866121c7565b6101de565b01930191612294565b919260208161237b600193612376866121ad565b6101de565b0193019161228c565b919260208161239d60019361239886612193565b6101de565b01930191612284565b91926020816123bf6001936123ba86612179565b6101de565b0193019161227c565b5b8160016008038401101561226557926001602061247c612481600894838080808080808f5497612401816123fc8b612179565b6101de565b016124148161240f8a612193565b6101de565b0161242781612422896121ad565b6101de565b0161243a81612435886121c7565b6101de565b0161244d81612448876121e1565b6101de565b016124608161245b866121fb565b6101de565b016124738161246e85612215565b6101de565b01928391612229565b6101de565b0194019201916123c9565b6124a2916020820191600081840391015261223d565b90565b6124d56124d060096124bf6124ba600a612137565b612144565b6124ca81600a6119af565b90612161565b6115ec565b906124ec60016124e76008849061036b565b6115cc565b6124f781839061259a565b6125366125247f0b4e9a2b2e24f5320fdec7a8f809964bee7f85431d288a2e211d9c8670a8c6089261034f565b9261252d610153565b9182918261248c565b0390a2565b61254490612110565b565b61255a61255561255f92610d83565b61034c565b610569565b90565b61256b90610569565b60ff81146125795760010190565b61107a565b61259261258d61259792610569565b61034c565b61060a565b90565b6125a582829061167e565b6125bb60006125b66007849061036b565b6115cc565b6125c56000612546565b5b806125ec6125e66125e16125dc6005879061065f565b61068d565b61060a565b9161257e565b10156126295761261b61261461260e6126076005869061065f565b849061069c565b906106ec565b849061259a565b61262490612562565b6125c6565b505050565b61263f9061263a610dcc565b612641565b565b61267161266c600961265b612656600a612137565b612144565b61266681600a6119af565b90612161565b6115ec565b9061268860006126836008849061036b565b6115cc565b612693818390612703565b6126d26126c07f5d5827d08a2154252aeb2169641f3a576cd3bd5f206215da5387963dc5f073719261034f565b926126c9610153565b9182918261248c565b0390a2565b6126e09061262e565b565b6126ee6126f391610d34565b610387565b90565b61270090546126e2565b90565b61270e82829061167e565b612724600161271f6007849061036b565b6115cc565b61272e6000612546565b5b8061275561274f61274a6127456005879061065f565b61068d565b61060a565b9161257e565b10156127d15761278c61278761278061277a6127736005879061065f565b859061069c565b906106ec565b600861036b565b6126f6565b6127c8576127b96127b26127ac6127a56005869061065f565b849061069c565b906106ec565b8490612703565b6127c3905b612562565b61272f565b6127c3906127be565b505050565b9061280b91336127f56127ef6127ea610d5b565b610173565b91610173565b14801561280d575b612806906114bd565b6128ec565b565b50612818600c610d4e565b61283361282d6128286000610da2565b610173565b91610173565b141580612840575b6127fd565b506128063361286061285a612855600c610d4e565b610173565b91610173565b14905061283b565b60007f4e6f74206974656d2073656c6c65720000000000000000000000000000000000910152565b61289d600f602092611459565b6128a681612868565b0190565b6128c09060208101906000818303910152612890565b90565b156128ca57565b6128d2610153565b62461bcd60e51b8152806128e8600482016128aa565b0390fd5b61294d6129486129529361292c612901610f73565b61292661292061291b61291660018a9061099d565b610d4e565b610173565b91610173565b146128c3565b6129418161293c6001879061099d565b610ef2565b600261102a565b6115ec565b61167e565b565b9061295e916127d6565b565b90565b61297761297261297c92612960565b61034c565b6101d5565b90565b90565b61299661299161299b9261297f565b61034c565b6101d5565b90565b6129b26129ad6129b792610d83565b61034c565b61060a565b90565b906129c48261140c565b8110156129d657600160209102010190565b610677565b60ff60f81b1690565b6129ee90516129db565b90565b60f81c90565b612a03612a08916129f1565b6119eb565b90565b612a1f612a1a612a2492610569565b61034c565b6101d5565b90565b90612a3291026101d5565b90565b90612a3e611399565b50612a4c6301000193612963565b612a5963811c9dc5612982565b92612a64600061299e565b935b84612a81612a7b612a768561140c565b61060a565b9161060a565b1015612ac557612ab9612abf91612ab1612aac612aa7612aa2878b906129ba565b6129e4565b6129f7565b612a0b565b188490612a27565b94612144565b93612a66565b9350505056fea2646970667358221220b34bc1852010610dd624d68a13bfca0f8c391d358d33c244eea936891ef66ce364736f6c63430008150033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "itemName";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "seller";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "usdPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32[]";
            readonly name: "shareItemIDs";
            readonly type: "uint32[]";
        }];
        readonly name: "ItemRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32[]";
            readonly name: "resumed";
            readonly type: "uint32[]";
        }];
        readonly name: "ItemSaleResumed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32[]";
            readonly name: "suspension";
            readonly type: "uint32[]";
        }];
        readonly name: "ItemSaleSuspended";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "seller_";
            readonly type: "address";
        }];
        readonly name: "getItemsOfSeller";
        readonly outputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "";
            readonly type: "uint32[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "isOnSale";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "itemRevenueSharers";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "nameToHash";
            readonly type: "string";
        }];
        readonly name: "nameHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "numberOfSharers";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "itemNameHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "seller_";
            readonly type: "address";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "revenueSharers";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "usdPrice";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "shareTerms";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "uint16[]";
            readonly name: "shares";
            readonly type: "uint16[]";
        }];
        readonly name: "registerItem";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "itemShareIDs";
            readonly type: "uint32[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }];
        readonly name: "resumeItemSale";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint8";
            readonly name: "index";
            readonly type: "uint8";
        }];
        readonly name: "revenueSharerOfItem";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "parent";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "revenueSharingItems";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "seller";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "priceTableAddress";
            readonly type: "address";
        }];
        readonly name: "setPriceTable";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sellerProxy_";
            readonly type: "address";
        }];
        readonly name: "setSellerProxy";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }];
        readonly name: "suspendItemSale";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "suspensionRoot";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "timestampRegistered";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "newSeller";
            readonly type: "address";
        }];
        readonly name: "transferSellerRight";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ItemRegistryInterface;
    static connect(address: string, runner?: ContractRunner | null): ItemRegistry;
}
export {};
//# sourceMappingURL=ItemRegistry__factory.d.ts.map