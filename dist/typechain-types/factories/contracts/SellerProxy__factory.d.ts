import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SellerProxy, SellerProxyInterface } from "../../contracts/SellerProxy";
type SellerProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SellerProxy__factory extends ContractFactory {
    constructor(...args: SellerProxyConstructorParams);
    getDeployTransaction(paymentProcessor: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(paymentProcessor: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<SellerProxy & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): SellerProxy__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b506040516200187c3803806200187c83398181016040528101906200003791906200035e565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620003a1565b60405180910390fd5b620000be816200023060201b60201c565b5060008190508073ffffffffffffffffffffffffffffffffffffffff1663957047f66040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000136919062000403565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16635ada0c296040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e891906200047a565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620004ac565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032682620002f9565b9050919050565b620003388162000319565b81146200034457600080fd5b50565b60008151905062000358816200032d565b92915050565b600060208284031215620003775762000376620002f4565b5b6000620003878482850162000347565b91505092915050565b6200039b8162000319565b82525050565b6000602082019050620003b8600083018462000390565b92915050565b6000620003cb8262000319565b9050919050565b620003dd81620003be565b8114620003e957600080fd5b50565b600081519050620003fd81620003d2565b92915050565b6000602082840312156200041c576200041b620002f4565b5b60006200042c84828501620003ec565b91505092915050565b6000620004428262000319565b9050919050565b620004548162000435565b81146200046057600080fd5b50565b600081519050620004748162000449565b92915050565b600060208284031215620004935762000492620002f4565b5b6000620004a38482850162000463565b91505092915050565b6113c080620004bc6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639ae5ed611161005b5780639ae5ed61146100c65780639e8595dd146100e2578063b7958936146100fe578063f2fde38b1461012e5761007d565b806306cb7f4c14610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190610b4c565b61014a565b005b6100a661033d565b005b6100b0610351565b6040516100bd9190610bcf565b60405180910390f35b6100e060048036038101906100db9190610bea565b61037a565b005b6100fc60048036038101906100f79190610d34565b610580565b005b61011860048036038101906101139190610e23565b610729565b6040516101259190610f0e565b60405180910390f35b61014860048036038101906101439190610f30565b61086a565b005b6101526108f0565b60005b838390508163ffffffff1610156102df578463ffffffff166003600086868563ffffffff1681811061018a57610189610f5d565b5b905060200201602081019061019f9190610e23565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614610210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020790610fe9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c9ede6b85858463ffffffff1681811061026757610266610f5d565b5b905060200201602081019061027c9190610e23565b846040518363ffffffff1660e01b815260040161029a929190611018565b600060405180830381600087803b1580156102b457600080fd5b505af11580156102c8573d6000803e3d6000fd5b5050505080806102d790611070565b915050610155565b508073ffffffffffffffffffffffffffffffffffffffff168463ffffffff167f5751cced274fa533356560ef0b60c0e74319ab6693096dfbfc3305880e2bef76858560405161032f929190611127565b60405180910390a350505050565b6103456108f0565b61034f6000610977565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103826108f0565b60005b848490508163ffffffff161015610511578563ffffffff166003600087878563ffffffff168181106103ba576103b9610f5d565b5b90506020020160208101906103cf9190610e23565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1614610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790610fe9565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e106fa786868463ffffffff1681811061049757610496610f5d565b5b90506020020160208101906104ac9190610e23565b85856040518463ffffffff1660e01b81526004016104cc9392919061114b565b600060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b50505050808061050990611070565b915050610385565b508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f3789909391850a2b1da9b4bf783ef6949b5f4ad1e4a2976cfbf60334f1cfd04e8686604051610571929190611127565b60405180910390a35050505050565b6105886108f0565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638f79678b8b308b8b8b8b8b8b8b6040518a63ffffffff1660e01b81526004016105f59998979695949392919061129d565b6020604051808303816000875af1158015610614573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610638919061132e565b905088600360008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550600460008a63ffffffff1663ffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055508863ffffffff168163ffffffff167f5dca466bf79f88c03e958521050136ada30ff662395ae8ee41bfa699f9a0d1bf60405160405180910390a350505050505050505050565b60606000600460008463ffffffff1663ffffffff16815260200190815260200160002080549050905060008163ffffffff1667ffffffffffffffff8111156107745761077361135b565b5b6040519080825280602002602001820160405280156107a25781602001602082028036833780820191505090505b50905060005b8263ffffffff168163ffffffff16101561085f57600460008663ffffffff1663ffffffff1681526020019081526020016000208163ffffffff16815481106107f3576107f2610f5d565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16828263ffffffff168151811061083257610831610f5d565b5b602002602001019063ffffffff16908163ffffffff1681525050808061085790611070565b9150506107a8565b508092505050919050565b6108726108f0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e45760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108db9190610bcf565b60405180910390fd5b6108ed81610977565b50565b6108f8610a3b565b73ffffffffffffffffffffffffffffffffffffffff16610916610351565b73ffffffffffffffffffffffffffffffffffffffff161461097557610939610a3b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161096c9190610bcf565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b610a6681610a4d565b8114610a7157600080fd5b50565b600081359050610a8381610a5d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610aae57610aad610a89565b5b8235905067ffffffffffffffff811115610acb57610aca610a8e565b5b602083019150836020820283011115610ae757610ae6610a93565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1982610aee565b9050919050565b610b2981610b0e565b8114610b3457600080fd5b50565b600081359050610b4681610b20565b92915050565b60008060008060608587031215610b6657610b65610a43565b5b6000610b7487828801610a74565b945050602085013567ffffffffffffffff811115610b9557610b94610a48565b5b610ba187828801610a98565b93509350506040610bb487828801610b37565b91505092959194509250565b610bc981610b0e565b82525050565b6000602082019050610be46000830184610bc0565b92915050565b600080600080600060808688031215610c0657610c05610a43565b5b6000610c1488828901610a74565b955050602086013567ffffffffffffffff811115610c3557610c34610a48565b5b610c4188828901610a98565b94509450506040610c5488828901610b37565b9250506060610c6588828901610b37565b9150509295509295909350565b6000819050919050565b610c8581610c72565b8114610c9057600080fd5b50565b600081359050610ca281610c7c565b92915050565b6000819050919050565b610cbb81610ca8565b8114610cc657600080fd5b50565b600081359050610cd881610cb2565b92915050565b60008083601f840112610cf457610cf3610a89565b5b8235905067ffffffffffffffff811115610d1157610d10610a8e565b5b602083019150836020820283011115610d2d57610d2c610a93565b5b9250929050565b600080600080600080600080600060c08a8c031215610d5657610d55610a43565b5b6000610d648c828d01610c93565b9950506020610d758c828d01610a74565b98505060408a013567ffffffffffffffff811115610d9657610d95610a48565b5b610da28c828d01610a98565b97509750506060610db58c828d01610cc9565b95505060808a013567ffffffffffffffff811115610dd657610dd5610a48565b5b610de28c828d01610a98565b945094505060a08a013567ffffffffffffffff811115610e0557610e04610a48565b5b610e118c828d01610cde565b92509250509295985092959850929598565b600060208284031215610e3957610e38610a43565b5b6000610e4784828501610a74565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e8581610a4d565b82525050565b6000610e978383610e7c565b60208301905092915050565b6000602082019050919050565b6000610ebb82610e50565b610ec58185610e5b565b9350610ed083610e6c565b8060005b83811015610f01578151610ee88882610e8b565b9750610ef383610ea3565b925050600181019050610ed4565b5085935050505092915050565b60006020820190508181036000830152610f288184610eb0565b905092915050565b600060208284031215610f4657610f45610a43565b5b6000610f5484828501610b37565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4e6f74206974656d2073656c6c65720000000000000000000000000000000000600082015250565b6000610fd3600f83610f8c565b9150610fde82610f9d565b602082019050919050565b6000602082019050818103600083015261100281610fc6565b9050919050565b61101281610a4d565b82525050565b600060408201905061102d6000830185611009565b61103a6020830184610bc0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061107b82610a4d565b915063ffffffff820361109157611090611041565b5b600182019050919050565b6000819050919050565b60006110b56020840184610a74565b905092915050565b6000602082019050919050565b60006110d68385610e5b565b93506110e18261109c565b8060005b8581101561111a576110f782846110a6565b6111018882610e8b565b975061110c836110bd565b9250506001810190506110e5565b5085925050509392505050565b600060208201905081810360008301526111428184866110ca565b90509392505050565b60006060820190506111606000830186611009565b61116d6020830185610bc0565b61117a6040830184610bc0565b949350505050565b61118b81610c72565b82525050565b61119a81610ca8565b82525050565b600082825260208201905092915050565b6000819050919050565b600061ffff82169050919050565b6111d2816111bb565b82525050565b60006111e483836111c9565b60208301905092915050565b6111f9816111bb565b811461120457600080fd5b50565b600081359050611216816111f0565b92915050565b600061122b6020840184611207565b905092915050565b6000602082019050919050565b600061124c83856111a0565b9350611257826111b1565b8060005b858110156112905761126d828461121c565b61127788826111d8565b975061128283611233565b92505060018101905061125b565b5085925050509392505050565b600060c0820190506112b2600083018c611182565b6112bf602083018b610bc0565b81810360408301526112d281898b6110ca565b90506112e16060830188611191565b81810360808301526112f48186886110ca565b905081810360a0830152611309818486611240565b90509a9950505050505050505050565b60008151905061132881610a5d565b92915050565b60006020828403121561134457611343610a43565b5b600061135284828501611319565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220c4476032c6a8ba2f9c1d11ada28d4c51df040726fdf867823022c1faee8c369a64736f6c63430008150033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "paymentProcessor";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "sellerID";
            readonly type: "uint32";
        }];
        readonly name: "ItemRegistrationDelegated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32[]";
            readonly name: "items";
            readonly type: "uint32[]";
        }];
        readonly name: "ProfitClaimDelegated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "sellerID";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sellerAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32[]";
            readonly name: "items";
            readonly type: "uint32[]";
        }];
        readonly name: "SellerRightClaimed";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "sellerID";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "items";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }];
        readonly name: "claimProfit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "sellerID";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "items";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "address";
            readonly name: "sellerAddress";
            readonly type: "address";
        }];
        readonly name: "claimSellerRight";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "sellerID";
            readonly type: "uint32";
        }];
        readonly name: "getItemsOfSeller";
        readonly outputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "";
            readonly type: "uint32[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "itemNameHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "sellerID";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "revenueSharers";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "usdPrice";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32[]";
            readonly name: "shareTerms";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "uint16[]";
            readonly name: "shares";
            readonly type: "uint16[]";
        }];
        readonly name: "registerItem";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): SellerProxyInterface;
    static connect(address: string, runner?: ContractRunner | null): SellerProxy;
}
export {};
//# sourceMappingURL=SellerProxy__factory.d.ts.map