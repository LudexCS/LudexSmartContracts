import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { PaymentProcessor, PaymentProcessorInterface } from "../../contracts/PaymentProcessor";
type PaymentProcessorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class PaymentProcessor__factory extends ContractFactory {
    constructor(...args: PaymentProcessorConstructorParams);
    getDeployTransaction(forwarderAddress: AddressLike, initialFeeRate: BigNumberish, priceTableAddress: AddressLike, profitEscrowAddress: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(forwarderAddress: AddressLike, initialFeeRate: BigNumberish, priceTableAddress: AddressLike, profitEscrowAddress: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<PaymentProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): PaymentProcessor__factory;
    static readonly bytecode = "0x60a0604052346200004457620000226200001862000181565b92919091620006ab565b6200002c6200004a565b6120a662000a3b823960805181610bd601526120a690f35b62000050565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90620000819062000055565b810190811060018060401b038211176200009a57604052565b6200005f565b90620000b7620000af6200004a565b928362000075565b565b600080fd5b60018060a01b031690565b620000d490620000be565b90565b620000e281620000c9565b03620000ea57565b600080fd5b90505190620000fe82620000d7565b565b61ffff1690565b620001128162000100565b036200011a57565b600080fd5b905051906200012e8262000107565b565b6080818303126200017b576200014a8260008301620000ef565b92620001786200015e84602085016200011f565b936200016e8160408601620000ef565b93606001620000ef565b90565b620000b9565b620001a462002ae1803803806200019881620000a0565b92833981019062000130565b90919293565b60001b90565b90620001bf60001991620001aa565b9181191691161790565b90565b90565b90565b620001eb620001e5620001f192620001c9565b620001cf565b620001cc565b90565b90565b90620002116200020b6200021992620001d2565b620001f4565b8254620001b0565b9055565b90565b6200022c6040620000a0565b90565b906200023b90620001cc565b9052565b906200024b9062000100565b9052565b600052602060002090565b634e487b7160e01b600052603260045260246000fd5b5490565b6200027f8162000270565b8210156200029d57620002946002916200024f565b91020190600090565b6200025a565b634e487b7160e01b600052600060045260246000fd5b620002c59051620001cc565b90565b620002e1620002db620002e792620001cc565b620001cf565b620001cc565b90565b9062000304620002fe6200030c92620002c8565b620001f4565b8254620001b0565b9055565b6200031c905162000100565b90565b906200032e61ffff91620001aa565b9181191691161790565b620003516200034b620003579262000100565b620001cf565b62000100565b90565b90565b9062000377620003716200037f9262000338565b6200035a565b82546200031f565b9055565b90620003b760206001620003be94620003ae60008201620003a760008801620002b9565b90620002ea565b01920162000310565b906200035d565b565b9190620003d457620003d29162000383565b565b620002a3565b90815491680100000000000000008310156200040f5782620004069160016200040d9501815562000274565b90620003c0565b565b6200005f565b6200042e620004286200043492620000be565b620001cf565b620000be565b90565b620004429062000415565b90565b620004509062000437565b90565b906200046660018060a01b0391620001aa565b9181191691161790565b6200047b9062000437565b90565b90565b906200049b62000495620004a39262000470565b6200047e565b825462000453565b9055565b60001c90565b60018060a01b031690565b620004c7620004cd91620004a7565b620004ad565b90565b620004dc9054620004b8565b90565b620004ea9062000415565b90565b620004f890620004df565b90565b60e01b90565b6200050c90620000c9565b90565b6200051a8162000501565b036200052257565b600080fd5b9050519062000536826200050f565b565b906020828203126200055557620005529160000162000527565b90565b620000b9565b60000190565b6200056b6200004a565b3d6000823e3d90fd5b6200057f9062000415565b90565b6200058d9062000574565b90565b90565b90620005ad620005a7620005b59262000582565b62000590565b825462000453565b9055565b620005c490620000c9565b90565b620005d281620005b9565b03620005da57565b600080fd5b90505190620005ee82620005c7565b565b906020828203126200060d576200060a91600001620005df565b90565b620000b9565b6200061e9062000415565b90565b6200062c9062000613565b90565b90565b906200064c62000646620006549262000621565b6200062f565b825462000453565b9055565b620006639062000415565b90565b620006719062000658565b90565b6200067f9062000658565b90565b90565b906200069f62000699620006a79262000674565b62000682565b825462000453565b9055565b620007539392620007146200072293620006ca6200071a943362000882565b620006d9610e106007620001f7565b620006e560016200021d565b6200070e429262000704620006f962000220565b94600086016200022f565b602084016200023f565b620003da565b62000445565b600462000481565b60206200073a620007346004620004d0565b620004ed565b63957047f6906200074a6200004a565b948592620004fb565b8252818062000765600482016200055b565b03915afa9182156200087c57620007be926200078d9160009162000847575b50600262000593565b6020620007a56200079f6004620004d0565b620004ed565b6370c69b0990620007b56200004a565b948592620004fb565b82528180620007d0600482016200055b565b03915afa9081156200084157620007fc62000802926200080a946000916200080c575b50600362000632565b62000666565b600562000685565b565b62000832915060203d811162000839575b62000829818362000075565b810190620005f0565b38620007f3565b503d6200081d565b62000561565b6200086d915060203d811162000874575b62000864818362000075565b81019062000538565b3862000784565b503d62000858565b62000561565b6200088d916200088f565b565b906200089b90620008fa565b608052565b90565b620008bc620008b6620008c292620008a0565b620001cf565b620000be565b90565b620008d090620008a3565b90565b620008de90620000c9565b9052565b9190620008f890600060208501940190620008d3565b565b806200091c620009156200090f6000620008c5565b620000c9565b91620000c9565b146200092f576200092d90620009cd565b565b620009606200093f6000620008c5565b620009496200004a565b918291631e4fbdf760e01b835260048301620008e2565b0390fd5b60018060a01b031690565b6200097e6200098491620004a7565b62000964565b90565b6200099390546200096f565b90565b620009a190620004df565b90565b90565b90620009c1620009bb620009c99262000996565b620009a4565b825462000453565b9055565b620009d9600062000987565b620009e6826000620009a7565b9062000a1e62000a177f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000996565b9162000996565b9162000a296200004a565b8062000a35816200055b565b0390a356fe60806040526004361015610013575b6109b0565b61001e60003561011d565b8063087cbd4014610118578063100f9bf81461011357806351b449891461010e578063572b6c05146101095780635ada0c2914610104578063606d9843146100ff57806370c69b09146100fa578063715018a6146100f5578063733d224f146100f05780637da0a877146100eb5780638da5cb5b146100e657806394386d2a146100e1578063957047f6146100dc578063975057e7146100d75780639d367cd1146100d25763f2fde38b0361000e5761097d565b610949565b6108d9565b610863565b6107bf565b61072f565b6106fa565b6106a4565b610671565b61063c565b610597565b610516565b610471565b610413565b610275565b610193565b60e01c90565b60405190565b600080fd5b600080fd5b60018060a01b031690565b61014790610133565b90565b6101538161013e565b0361015a57565b600080fd5b9050359061016c8261014a565b565b90602082820312610188576101859160000161015f565b90565b61012e565b60000190565b346101c1576101ab6101a636600461016e565b610e2d565b6101b3610123565b806101bd8161018d565b0390f35b610129565b60009103126101d157565b61012e565b1c90565b60018060a01b031690565b6101f59060086101fa93026101d6565b6101da565b90565b9061020891546101e5565b90565b61021860046000906101fd565b90565b90565b61023261022d61023792610133565b61021b565b610133565b90565b6102439061021e565b90565b61024f9061023a565b90565b61025b90610246565b9052565b919061027390600060208501940190610252565b565b346102a5576102853660046101c6565b6102a161029061020b565b610298610123565b9182918261025f565b0390f35b610129565b90565b6102b6816102aa565b036102bd57565b600080fd5b905035906102cf826102ad565b565b906020828203126102eb576102e8916000016102c2565b90565b61012e565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b61031e81610306565b8210156103395761033060029161030a565b91020190600090565b6102f0565b60001c90565b90565b6103536103589161033e565b610344565b90565b6103659054610347565b90565b61ffff1690565b61037b6103809161033e565b610368565b90565b61038d905461036f565b90565b60019061039c82610306565b8110156103c9576103ac91610315565b50906103c660016103bf6000850161035b565b9301610383565b90565b600080fd5b6103d7906102aa565b9052565b61ffff1690565b6103eb906103db565b9052565b91602061041192949361040a604082019660008301906103ce565b01906103e2565b565b346104445761042b6104263660046102d1565b610390565b90610440610437610123565b928392836103ef565b0390f35b610129565b151590565b61045790610449565b9052565b919061046f9060006020850194019061044e565b565b346104a15761049d61048c61048736600461016e565b610bfd565b610494610123565b9182918261045b565b0390f35b610129565b60018060a01b031690565b6104c19060086104c693026101d6565b6104a6565b90565b906104d491546104b1565b90565b6104e460056000906104c9565b90565b6104f09061023a565b90565b6104fc906104e7565b9052565b9190610514906000602085019401906104f3565b565b34610546576105263660046101c6565b6105426105316104d7565b610539610123565b91829182610500565b0390f35b610129565b61055b90600861056093026101d6565b610344565b90565b9061056e915461054b565b90565b61057e6007600090610563565b90565b9190610595906000602085019401906103ce565b565b346105c7576105a73660046101c6565b6105c36105b2610571565b6105ba610123565b91829182610581565b0390f35b610129565b60018060a01b031690565b6105e79060086105ec93026101d6565b6105cc565b90565b906105fa91546105d7565b90565b61060a60036000906105ef565b90565b6106169061023a565b90565b6106229061060d565b9052565b919061063a90600060208501940190610619565b565b3461066c5761064c3660046101c6565b6106686106576105fd565b61065f610123565b91829182610626565b0390f35b610129565b3461069f576106813660046101c6565b610689610a42565b610691610123565b8061069b8161018d565b0390f35b610129565b346106d2576106bc6106b73660046102d1565b612065565b6106c4610123565b806106ce8161018d565b0390f35b610129565b6106e09061013e565b9052565b91906106f8906000602085019401906106d7565b565b3461072a5761070a3660046101c6565b610726610715610bcb565b61071d610123565b918291826106e4565b0390f35b610129565b3461075f5761073f3660046101c6565b61075b61074a6109db565b610752610123565b918291826106e4565b0390f35b610129565b63ffffffff1690565b61077681610764565b0361077d57565b600080fd5b9050359061078f8261076d565b565b91906040838203126107ba57806107ae6107b79260008601610782565b9360200161015f565b90565b61012e565b346107ee576107d86107d2366004610791565b90611d32565b6107e0610123565b806107ea8161018d565b0390f35b610129565b60018060a01b031690565b61080e90600861081393026101d6565b6107f3565b90565b9061082191546107fe565b90565b6108316002600090610816565b90565b61083d9061023a565b90565b61084990610834565b9052565b919061086190600060208501940190610840565b565b34610893576108733660046101c6565b61088f61087e610824565b610886610123565b9182918261084d565b0390f35b610129565b60018060a01b031690565b6108b39060086108b893026101d6565b610898565b90565b906108c691546108a3565b90565b6108d660066000906108bb565b90565b34610909576108e93660046101c6565b6109056108f46108c9565b6108fc610123565b918291826106e4565b0390f35b610129565b90916060828403126109445761094161092a846000850161015f565b936109388160208601610782565b9360400161015f565b90565b61012e565b346109785761096261095c36600461090e565b91611469565b61096a610123565b806109748161018d565b0390f35b610129565b346109ab5761099561099036600461016e565b610b0f565b61099d610123565b806109a78161018d565b0390f35b610129565b600080fd5b600090565b6109c66109cb9161033e565b610898565b90565b6109d890546109ba565b90565b6109e36109b5565b506109ee60006109ce565b90565b6109f9610a4c565b610a01610a2e565b565b90565b610a1a610a15610a1f92610a03565b61021b565b610133565b90565b610a2b90610a06565b90565b610a40610a3b6000610a22565b610b6a565b565b610a4a6109f1565b565b610a546109db565b610a6d610a67610a62610c23565b61013e565b9161013e565b03610a7457565b610a9d610a7f610c23565b610a87610123565b91829163118cdaa760e01b8352600483016106e4565b0390fd5b610ab290610aad610a4c565b610ab4565b565b80610ad0610aca610ac56000610a22565b61013e565b9161013e565b14610ae057610ade90610b6a565b565b610b0b610aed6000610a22565b610af5610123565b918291631e4fbdf760e01b8352600483016106e4565b0390fd5b610b1890610aa1565b565b60001b90565b90610b3160018060a01b0391610b1a565b9181191691161790565b610b449061023a565b90565b90565b90610b5f610b5a610b6692610b3b565b610b47565b8254610b20565b9055565b610b7460006109ce565b610b7f826000610b4a565b90610bb3610bad7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610b3b565b91610b3b565b91610bbc610123565b80610bc68161018d565b0390a3565b610bd36109b5565b507f000000000000000000000000000000000000000000000000000000000000000090565b600090565b610c05610bf8565b50610c1f610c19610c14610bcb565b61013e565b9161013e565b1490565b610c2b6109b5565b50610c34610d29565b90565b5090565b634e487b7160e01b600052601160045260246000fd5b610c60610c66919392936102aa565b926102aa565b8203918211610c7157565b610c3b565b600080fd5b600080fd5b90939293848311610ca0578411610c9b576001820201920390565b610c7b565b610c76565b6bffffffffffffffffffffffff191690565b1b90565b90610cc9610cd09183610c37565b9135610ca5565b9060148110610cde575b5090565b610cfc906bffffffffffffffffffffffff1990601403600802610cb7565b1638610cda565b60601c90565b610d15610d1a91610d03565b61021e565b90565b610d2690610d09565b90565b610d316109b5565b50610d3e60003690610c37565b610d46610dc4565b610d4f33610bfd565b80610d97575b600014610d8a57610d7c610d8291610d8793610d746000923692610c51565b908092610c80565b90610cbb565b610d1d565b90565b5050610d94610db2565b90565b5081610dab610da5836102aa565b916102aa565b1015610d55565b610dba6109b5565b503390565b600090565b610dcc610dbf565b50610dd5610df7565b90565b90565b610def610dea610df492610dd8565b61021b565b6102aa565b90565b610dff610dbf565b50610e0a6014610ddb565b90565b610e1e90610e19610a4c565b610e20565b565b610e2b906006610b4a565b565b610e3690610e0d565b565b60209181520190565b60007f4e6f7420617574686f72697a65642073746f7265000000000000000000000000910152565b610e766014602092610e38565b610e7f81610e41565b0190565b610e999060208101906000818303910152610e69565b90565b15610ea357565b610eab610123565b62461bcd60e51b815280610ec160048201610e83565b0390fd5b90610efc9291610ef7610ed6610c23565b610ef1610eeb610ee660066109ce565b61013e565b9161013e565b14610e9c565b61125d565b565b610f0a610f0f9161033e565b6101da565b90565b610f1c9054610efe565b90565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610f4e90610f24565b810190811067ffffffffffffffff821117610f6857604052565b610f2e565b60e01b90565b90505190610f80826102ad565b565b90602082820312610f9c57610f9991600001610f73565b90565b61012e565b610faa90610764565b9052565b916020610fd0929493610fc960408201966000830190610fa1565b01906106d7565b565b610fda610123565b3d6000823e3d90fd5b610fec9061021e565b90565b610ff890610fe3565b90565b6110049061023a565b90565b6110109061023a565b90565b61101c81610449565b0361102357565b600080fd5b9050519061103582611013565b565b906020828203126110515761104e91600001611028565b90565b61012e565b6040906110806110879496959396611076606084019860008501906106d7565b60208301906106d7565b01906103ce565b565b60007f5472616e73666572206661696c65640000000000000000000000000000000000910152565b6110be600f602092610e38565b6110c781611089565b0190565b6110e190602081019060008183039101526110b1565b90565b156110eb57565b6110f3610123565b62461bcd60e51b815280611109600482016110cb565b0390fd5b61112161111c611126926103db565b61021b565b6102aa565b90565b61113861113e919392936102aa565b926102aa565b9161114a8382026102aa565b92818404149015171561115957565b610c3b565b90565b61117561117061117a9261115e565b61021b565b6102aa565b90565b634e487b7160e01b600052601260045260246000fd5b61119f6111a5916102aa565b916102aa565b9081156111b0570490565b61117d565b9160206111d79294936111d0604082019660008301906106d7565b01906103ce565b565b60007f466565207472616e73666572206661696c656400000000000000000000000000910152565b61120e6013602092610e38565b611217816111d9565b0190565b6112319060208101906000818303910152611201565b90565b1561123b57565b611243610123565b62461bcd60e51b8152806112596004820161121b565b0390fd5b919061127161126c6004610f12565b610246565b60206323cd9f0191839061129786946112a261128b610123565b96879586948594610f6d565b845260048401610fae565b03915afa90811561146457600091611436575b509260206112ca6112c585610fef565b610ffb565b6323b872dd92906112f860006112df30611007565b956113038a6112ec610123565b98899788968795610f6d565b855260048501611056565b03925af180156114315761131f91600091611403575b506110e4565b61134f61133e61132e83611527565b611338869161110d565b90611129565b611349612710611161565b90611193565b9261136161135c84610fef565b610ffb565b93602063a9059cbb956113726109db565b906113916000859961139c611385610123565b9b8c9687958694610f6d565b8452600484016111b5565b03925af19182156113fe576113c06113c5936113ce976000916113d0575b50611234565b610c51565b909190916118d0565b565b6113f1915060203d81116113f7575b6113e98183610f44565b810190611037565b386113ba565b503d6113df565b610fd2565b611424915060203d811161142a575b61141c8183610f44565b810190611037565b38611319565b503d611412565b610fd2565b611457915060203d811161145d575b61144f8183610f44565b810190610f82565b386112b5565b503d611445565b610fd2565b906114749291610ec5565b565b600090565b61148761148c9161033e565b6107f3565b90565b611499905461147b565b90565b91906114b090600060208501940190610fa1565b565b90565b6114c96114c46114ce926114b2565b61021b565b6102aa565b90565b6114e56114e06114ea92610a03565b61021b565b6102aa565b90565b6114f6906102aa565b60001981146115055760010190565b610c3b565b611513906102aa565b60008114611522576001900390565b610c3b565b602061156f91611535611476565b50611548611543600261148f565b610834565b611564639884c1c8611558610123565b95869485938493610f6d565b83526004830161149c565b03915afa90811561169c5760009161166e575b506115b460016115ad816115a761159884610306565b6115a1856114b5565b90610c51565b90610315565b5001610383565b906115bf60006114d1565b5b806115dc6115d66115d16001610306565b6102aa565b916102aa565b1015611666576115fa60006115f360018490610315565b500161035b565b61160c611606846102aa565b916102aa565b10156116205761161b906114ed565b6115c0565b6116549250600191508061164d9161164161163b60006114d1565b916102aa565b11611658575b82610315565b5001610383565b905b565b6116619061150a565b611647565b505090611656565b61168f915060203d8111611695575b6116878183610f44565b810190610f82565b38611582565b503d61167d565b610fd2565b60ff1690565b6116b0816116a1565b036116b757565b600080fd5b905051906116c9826116a7565b565b906020828203126116e5576116e2916000016116bc565b90565b61012e565b6116fe6116f961170392610a03565b61021b565b6116a1565b90565b61170f906116a1565b60ff811461171d5760010190565b610c3b565b9050519061172f8261076d565b565b9060208282031261174b5761174891600001611722565b90565b61012e565b611759906116a1565b9052565b91602061177f92949361177860408201966000830190610fa1565b0190611750565b565b61178a816103db565b0361179157565b600080fd5b905051906117a382611781565b565b906020828203126117bf576117bc91600001611796565b90565b61012e565b9160206117e69294936117df60408201966000830190610fa1565b0190610fa1565b565b6117f46117f99161033e565b6104a6565b90565b61180690546117e8565b90565b60007f5472616e7366657220746f20657363726f77206661696c656400000000000000910152565b61183e6019602092610e38565b61184781611809565b0190565b6118619060208101906000818303910152611831565b90565b1561186b57565b611873610123565b62461bcd60e51b8152806118896004820161184b565b0390fd5b600091031261189857565b61012e565b6040906118c76118ce94969593966118bd60608401986000850190610fa1565b60208301906106d7565b01906103ce565b565b919261191360206118e96118e4600261148f565b610834565b6368797c4c9061190887926118fc610123565b95869485938493610f6d565b83526004830161149c565b03915afa908115611c2057600091611bf2575b5093809161193460006116ea565b5b80611948611942896116a1565b916116a1565b1015611ab35761196061195b600261148f565b610834565b602063c0a68a04918890611986859461199161197a610123565b96879586948594610f6d565b84526004840161175d565b03915afa908115611aae57600091611a80575b50936119b86119b36004610f12565b610246565b90602063a62358119287906119df8b956119ea6119d3610123565b97889586948594610f6d565b8452600484016117c4565b03915afa918215611a7b57611a2d611a1c611a3f94611a3593600091611a4d575b50611a16899161110d565b90611129565b611a27612710611161565b90611193565b918290610c51565b95908790916118d0565b611a4890611706565b611935565b611a6e915060203d8111611a74575b611a668183610f44565b8101906117a5565b38611a0b565b503d611a5c565b610fd2565b611aa1915060203d8111611aa7575b611a998183610f44565b810190611731565b386119a4565b503d611a8f565b610fd2565b509450509190611aca611ac582610fef565b610ffb565b602063a9059cbb91611ae4611adf60056117fc565b6104e7565b90611b0360008895611b0e611af7610123565b97889687958694610f6d565b8452600484016111b5565b03925af18015611bed57611b2a91600091611bbf575b50611864565b611b3c611b3760056117fc565b6104e7565b6320bc0c8f92919392813b15611bba576000611b6b91611b768296611b5f610123565b98899788968795610f6d565b85526004850161189d565b03925af18015611bb557611b88575b50565b611ba89060003d8111611bae575b611ba08183610f44565b81019061188d565b38611b85565b503d611b96565b610fd2565b610f1f565b611be0915060203d8111611be6575b611bd88183610f44565b810190611037565b38611b24565b503d611bce565b610fd2565b611c13915060203d8111611c19575b611c0b8183610f44565b8101906116cb565b38611926565b503d611c01565b610fd2565b90611c5b91611c56611c35610c23565b611c50611c4a611c4560066109ce565b61013e565b9161013e565b14610e9c565b611c5d565b565b90611c70611c6b6004610f12565b610246565b9160206323cd9f01938290611c978596611ca2611c8b610123565b98899586948594610f6d565b845260048401610fae565b03915afa928315611d2d57611cfd93611cf491600091611cff575b50611cee611cdd611ccd85611527565b611cd7849161110d565b90611129565b611ce8612710611161565b90611193565b90610c51565b90919091611d3e565b565b611d20915060203d8111611d26575b611d188183610f44565b810190610f82565b38611cbd565b503d611d0e565b610fd2565b90611d3c91611c25565b565b9192611d816020611d57611d52600261148f565b610834565b6368797c4c90611d768792611d6a610123565b95869485938493610f6d565b83526004830161149c565b03915afa908115611fea57600091611fbc575b50938091611da260006116ea565b5b80611db6611db0896116a1565b916116a1565b1015611f2157611dce611dc9600261148f565b610834565b602063c0a68a04918890611df48594611dff611de8610123565b96879586948594610f6d565b84526004840161175d565b03915afa908115611f1c57600091611eee575b5093611e26611e216004610f12565b610246565b90602063a6235811928790611e4d8b95611e58611e41610123565b97889586948594610f6d565b8452600484016117c4565b03915afa918215611ee957611e9b611e8a611ead94611ea393600091611ebb575b50611e84899161110d565b90611129565b611e95612710611161565b90611193565b918290610c51565b9590879091611d3e565b611eb690611706565b611da3565b611edc915060203d8111611ee2575b611ed48183610f44565b8101906117a5565b38611e79565b503d611eca565b610fd2565b611f0f915060203d8111611f15575b611f078183610f44565b810190611731565b38611e12565b503d611efd565b610fd2565b509450509190611f39611f3460056117fc565b6104e7565b63b92916d992919392813b15611fb7576000611f6891611f738296611f5c610123565b98899788968795610f6d565b85526004850161189d565b03925af18015611fb257611f85575b50565b611fa59060003d8111611fab575b611f9d8183610f44565b81019061188d565b38611f82565b503d611f93565b610fd2565b610f1f565b611fdd915060203d8111611fe3575b611fd58183610f44565b8101906116cb565b38611d94565b503d611fcb565b610fd2565b61200090611ffb610a4c565b612058565b565b9061200f60001991610b1a565b9181191691161790565b61202d612028612032926102aa565b61021b565b6102aa565b90565b90565b9061204d61204861205492612019565b612035565b8254612002565b9055565b612063906007612038565b565b61206e90611fef565b56fea26469706673582212200fc9329f775878fa24215e596ae389fed0b084d9f5fd0ffbd1b438291aa081d264736f6c63430008150033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "forwarderAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "initialFeeRate";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "priceTableAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "profitEscrowAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newDeadline";
            readonly type: "uint256";
        }];
        readonly name: "changePermissionDeadline";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "feeRateLog";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "feeRate";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "forwarder";
            readonly type: "address";
        }];
        readonly name: "isTrustedForwarder";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "itemRegistry";
        readonly outputs: readonly [{
            readonly internalType: "contract ItemRegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "permissionDeadline";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "priceTable";
        readonly outputs: readonly [{
            readonly internalType: "contract PriceTable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "buyer";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "process";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "itemID";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "processWithPending";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "profitEscrow";
        readonly outputs: readonly [{
            readonly internalType: "contract ProfitEscrow";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "sellerRegistry";
        readonly outputs: readonly [{
            readonly internalType: "contract SellerRegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "storeAddress";
            readonly type: "address";
        }];
        readonly name: "setStore";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "store";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "trustedForwarder";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): PaymentProcessorInterface;
    static connect(address: string, runner?: ContractRunner | null): PaymentProcessor;
}
export {};
//# sourceMappingURL=PaymentProcessor__factory.d.ts.map